- id: '1561923691422'
  alias: Timer Lights On bij zonsondergang
  trigger:
  - event: sunset
    platform: sun
  - platform: template
    value_template: '{{states.sensor.br_irradiance.state | int < states.input_number.condition_br_irradiance_lights_on.state
      | int}}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{  states.sensor.time.state > "15:00" and states.sensor.time.state < "23:59"}}'
  action:
  - data:
      brightness: 50
      color_temp: 500
      entity_id:
      - light.aanrecht
      - light.bar
      - light.boventv
      - light.lampen_eetkamertafel
      - light.sonoff_schemerlamp_n_bank
      - light.sonoff_spoelbak_keuken
      - light.lampen_speelkamer
      - light.grote_staande_lamp_bank
      - light.sonoff_sfeerlicht_speelkamer
    service: light.turn_on
- id: lichtenvoorzon
  alias: Timer Lights On voor zonsondergang
  trigger:
  - event: sunset
    offset: -00:15:00
    platform: sun
  - platform: template
    value_template: '{{states.sensor.br_irradiance.state | int < states.input_number.condition_br_irradiance_lights_on.state
      | int}}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{  states.sensor.time.state > "15:00" and states.sensor.time.state
      < "23:59"}}'
  action:
  - data:
      brightness: 50
      color_temp: 500
      entity_id:
      - light.sonoff_sfeerlicht_keuken
      - light.sonoff_lampje_tv
      - light.sonoff_lamp_ster
      - light.sonoff_schemerlamp_deur
    service: light.turn_on
- id: lichtennazon
  alias: Timer Lights On na zonsondergang
  trigger:
  - event: sunset
    offset: +00:10:00
    platform: sun
  condition:
  action:
  - data:
      entity_id:
      - light.lampen_achtertuin
      - light.lampen_voortuin
    service: light.turn_on
- id: lichtenuitnazon
  alias: Timer Lights Off na zonsopgang
  trigger:
  - event: sunrise
    offset: -00:20:00
    platform: sun
  action:
  - data:
      entity_id:
      - light.lampen_achtertuin
      - light.lampen_voortuin
    service: light.turn_off
- id: lichtenuitmiddennacht week
  alias: Timer Lights Off uit middennacht week
  trigger:
  - at: '22:45'
    platform: time
  condition:
  - condition: template
    value_template: '{{now().weekday() != 4 and now().weekday() != 5}}'
  - condition: template
    value_template: '{{((as_timestamp(now())-as_timestamp(states.binary_sensor.presence_woonkamer.last_updated))
      | int /60) > 30}}'
  action:
  - data:
      entity_id:
      - light.sonoff_voord_lamp
      - light.garagelamp
      - light.aanrecht
      - light.bar
      - light.boventv
      - light.lampen_eetkamertafel
      - light.sonoff_schemerlamp_n_bank
      - light.sonoff_spoelbak_keuken
      - light.lampen_speelkamer
      - light.grote_staande_lamp_bank
      - light.lampen_naast_huis
      - light.lamp_speelhuisje
      - light.entree
      - light.hal
      - light.sonoff_sfeerlicht_speelkamer
      - light.lampen_achtertuin
      - light.lampen_voortuin
    service: light.turn_off
- id: lichtenuitmiddennacht weekend
  alias: Timer Lights Off uit middennacht weekend
  trigger:
  - at: '23:30'
    platform: time
  condition:
  - condition: template
    value_template: '{{now().weekday() == 4 and now().weekday() == 5}}'
  - condition: template
    value_template: '{{((as_timestamp(now())-as_timestamp(states.binary_sensor.presence_woonkamer.last_updated))
      | int /60) > 30}}'
  action:
  - data:
      entity_id:
      - light.sonoff_voord_lamp
      - light.garagelamp
      - light.aanrecht
      - light.bar
      - light.boventv
      - light.lampen_eetkamertafel
      - light.sonoff_schemerlamp_n_bank
      - light.sonoff_spoelbak_keuken
      - light.lampen_speelkamer
      - light.grote_staande_lamp_bank
      - light.lampen_naast_huis
      - light.lamp_speelhuisje
      - light.entree
      - light.hal
      - light.sonoff_sfeerlicht_speelkamer
      - light.lampen_achtertuin
      - light.lampen_voortuin
    service: light.turn_off
- id: lichtenaanochtendbuiten
  alias: Timer Lights On ochtend buiten
  trigger:
  - at: 06:25
    platform: time
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{ states.sun.sun.state == "below_horizon"}}'
  action:
  - data:
      entity_id:
      - light.lampen_achtertuin
      - light.lampen_voortuin
    service: light.turn_on
- id: lampuitlars
  alias: Timer Lights Off Lars slapen week
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.bedtijd_lars_week.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() != 4 and now().weekday() != 5 and states.binary_sensor.schoolvakantiedag.state != "on" }}'
  - condition: state
    entity_id: light.leeslamp_lars
    state: 'on'
  action:
  - data:
      entity_id:
      - light.lampen_kamer_lars
    service: light.turn_off
  - delay: 00:00:02
  - data:
      entity_id:
      - light.lampen_kamer_lars
    service: light.turn_on
  - delay: 00:00:30
  - data:
      entity_id:
      - light.lampen_kamer_lars
    service: light.turn_off
  - service: script.janet_speech_engine_lars
    data:
      call_weltrusten: 1
- id: lampuitnienke
  alias: Timer Lights Off Nienke slapen week
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.bedtijd_nienke_week.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() != 4 and now().weekday() != 5 and states.binary_sensor.schoolvakantiedag.state != "on" }}'
  - condition: state
    entity_id: light.leeslamp_nienke
    state: 'on'
  action:
  - data:
      entity_id:
      - light.lampen_kamer_nienke
    service: light.turn_off
  - delay: 00:00:02
  - data:
      entity_id:
      - light.lampen_kamer_nienke
    service: light.turn_on
  - delay: 00:00:30
  - data:
      entity_id:
      - light.lampen_kamer_nienke
    service: light.turn_off
- id: '1565110930712'
  alias: Switch Woonkamerdeur lichten uit
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_woonkamer
      event: 1002
  condition: []
  action:
  - data:
      entity_id:
      - light.lampen_eetkamertafel
      - light.entree
      - light.lampen_hal
      - light.lampen_woonkamer
      - light.lampen_keuken
      - light.lampen_toilet_beneden
      - light.lampen_toilet_boven
    service: light.turn_off
- id: '15651109342342342'
  alias: Switch Eetkamerdeur lichten uit
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_eetkamer
      event: 1002
  condition: []
  action:
  - data:
      entity_id:
      - light.lampen_eetkamertafel
      - light.entree
      - light.lampen_hal
      - light.lampen_woonkamer
      - light.lampen_keuken
      - light.lampen_toilet_beneden
      - light.lampen_toilet_boven
    service: light.turn_off
- id: knop chillkamer single click
  alias: Switch chillkamer single click
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_chillkamer
      event: 1002
  condition: []
  action:
  - data:
      entity_id:
      - light.lampen_chillkamer
    service: light.toggle
- id: knop bed single click avond
  alias: Switch Bed single click avond
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_slaapkamer
      event: 1002
  condition:
  - condition: template
    value_template: '{{  states.sensor.time.state > "21:30" or states.sensor.time.state
      < "05:59"}}'
  action:
  - data:
      entity_id:
      - light.lampen_eetkamertafel
      - light.entree
      - light.lampen_hal
      - light.lampen_woonkamer
      - light.lampen_keuken
      - light.lampen_toilet_beneden
      - light.lampen_toilet_boven
      - light.lampen_hal_boven
      - light.lampen_kamer_lars
      - light.lampen_kamer_nienke
      - light.lampen_slaapkamer
    service: light.turn_off
  - service: alarm_control_panel.alarm_arm_night
    entity_id: alarm_control_panel.home_alarm
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Night
- id: knop bed single click dag
  alias: Switch Bed single click dag
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_slaapkamer
      event: 1002
  condition:
  - condition: template
    value_template: '{{  states.sensor.time.state > "06:00" and states.sensor.time.state
      < "21:30"}}'
  action:
  - data:
      entity_id:
      - light.lampen_eetkamertafel
      - light.entree
      - light.lampen_hal
      - light.lampen_woonkamer
      - light.lampen_keuken
      - light.lampen_toilet_beneden
      - light.lampen_toilet_boven
      - light.lampen_hal_boven
      - light.lampen_kamer_lars
      - light.lampen_kamer_nienke
      - light.lampen_slaapkamer
    service: light.turn_off
- id: knop bed double click
  alias: Switch Bed double click
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_slaapkamer
      event: 1004
  condition:
  action:
  - data:
      entity_id: light.lampen_naast_bed
    service: light.turn_on
  - data:
      transition: 1
      rgb_color:
      - 255
      - 0
      - 0
      brightness_pct: 20
      entity_id:
      - light.slaapkamerlamp
    service: light.turn_off
- id: knop bed triple click
  alias: Switch Bed triple click
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_slaapkamer
      event: 1005
  condition:
  action:
  - data:
      transition: 1
      rgb_color:
      - 255
      - 0
      - 0
      brightness_pct: 30
      entity_id:
      - light.slaapkamerlamp
    service: light.turn_on
  - data:
      entity_id: light.lampen_naast_bed
    service: light.turn_off
- id: knop bed quad click
  alias: Switch Bed quad click
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_slaapkamer
      event: 1006
  condition:
  action:
  - data:
      transition: 1
      brightness_pct: 100
      kelvin: 2000
      entity_id:
      - light.slaapkamerlamp
    service: light.turn_on
  - data:
      entity_id: light.lampen_naast_bed
    service: light.turn_off
- id: knop bed long click
  alias: Switch Bed long click
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_slaapkamer
      event: 1003
  action:
  - data:
      entity_id: light.lampen_naast_bed
    service: light.turn_on
  - data:
      transition: 1
      brightness_pct: 10
      kelvin: 2000
      entity_id:
      - light.slaapkamerlamp
    service: light.turn_on
- id: 1565116079428a
  alias: Switch Lars single
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_kamer_lars
      event: 1002
  condition:
  action:
  - data:
      entity_id: light.lampen_kamer_lars
    service: light.turn_off
- id: 1565116079428b
  alias: Switch Lars double
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_kamer_lars
      event: 1004
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state < states.input_datetime.bedtijd_lars_week.state[0:5]
      or states.sensor.time.state > "23:00" }}'
  action:
  - data:
      entity_id: light.leeslamp_lars
    service: light.toggle
- id: 1565116079428c
  alias: Switch Lars long
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_kamer_lars
      event: 1003
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state < states.input_datetime.bedtijd_lars_week.state[0:5]
      or states.sensor.time.state > "23:00" }}'
  action:
  - data:
      entity_id:
      - light.lampen_kamer_lars
    service: light.turn_on
- id: 15651160434328b
  alias: Switch Lars triple
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_kamer_lars
      event: 1005
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_lars_triple.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 1 | int}}

      '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_langskomen: 1
      kind: Lars
  - service: script.janet_speech_engine_lars
    data:
      call_langskomen: 1
- id: switchnienke1
  alias: Switch Nienke single
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_kamer_nienke
      event: 1002
  condition:
  action:
  - data:
      entity_id: light.lampen_kamer_nienke
    service: light.turn_off
- id: switchnienke2
  alias: Switch Nienke double
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_kamer_nienke
      event: 1004
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state < states.input_datetime.bedtijd_nienke_week.state[0:5]
      or states.sensor.time.state > "23:00" }}'
  action:
  - data:
      entity_id: light.leeslamp_nienke
    service: light.toggle
- id: switchnienke3
  alias: Switch Nienke long
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_kamer_nienke
      event: 1003
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state < states.input_datetime.bedtijd_nienke_week.state[0:5]
      or states.sensor.time.state > "23:00" }}'
  action:
  - data:
      entity_id: light.lampen_kamer_nienke
    service: light.turn_on
- id: 1565116042342428b
  alias: Switch Nienke triple
  trigger:
  - event_data:
      event: 1005
      id: smart_switch_kamer_nienke
    event_type: deconz_event
    platform: event
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_nienke_triple.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 1 | int}}

      '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_langskomen: 1
      kind: Nienke
- id: '1565808534298'
  alias: Motion Lights On Deur open
  trigger:
  - entity_id: binary_sensor.eetkamerdeur
    platform: state
    to: 'on'
  - entity_id: binary_sensor.woonkamerdeur
    platform: state
    to: 'on'
  - entity_id: binary_sensor.voordeur
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sun.sun.state == "below_horizon"}}'
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_woonkamerdeur_lichten_uit.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_woonkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_eetkamerdeur_lichten_uit.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_woonkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_bed_single_click_avond.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_woonkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_bed_single_click_dag.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_woonkamer_minutes.state
      | int}}

      '
  - condition: state
    entity_id: light.lampen_eetkamertafel
    state: 'off'
  - condition: state
    entity_id: light.lampen_woonkamer
    state: 'off'
  - condition: state
    entity_id: light.lampen_keuken
    state: 'off'
  action:
  - data:
      brightness: 50
      color_temp: 480
      entity_id:
      - light.lampen_eetkamertafel
      - light.entree
      - light.lampen_woonkamer
      - light.lampen_keuken
    service: light.turn_on
- id: '156583213124242'
  alias: Motion Lights On woonkamer Avond
  trigger:
  - entity_id: binary_sensor.presence_keuken
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_woonkamer
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sun.sun.state == "below_horizon" and states.sensor.time.state
      > "15:00" and states.sensor.time.state < "23:59"}}'
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_woonkamerdeur_lichten_uit.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_woonkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_eetkamerdeur_lichten_uit.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_woonkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_bed_single_click.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_woonkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.motion_lights_on_woonkamer_avond.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 15}}

      '
  action:
  - data_template:
      brightness: '{{ 50 if states.light.lampen_eetkamertafel.state == "off" else
        states.light.lampen_eetkamertafel.attributes.brightness }}'
      entity_id: light.lampen_eetkamertafel
    service: light.turn_on
  - data_template:
      brightness: '{{ 50 if states.light.entree.state == "off" else states.light.entree.attributes.brightness
        }}'
      entity_id: light.entree
    service: light.turn_on
  - data_template:
      brightness: '{{ 50 if states.light.lampen_woonkamer.state == "off" else states.light.boventv.attributes.brightness
        }}'
      entity_id: light.lampen_woonkamer
    service: light.turn_on
  - data_template:
      brightness: '{{ 50 if states.light.lampen_keuken.state == "off" else states.light.bar.attributes.brightness
        }}'
      entity_id: light.lampen_keuken
    service: light.turn_on
- id: '15658321316646'
  alias: Motion Lights On woonkamer net voor zonsondergang
  trigger:
  - entity_id: binary_sensor.presence_keuken
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_woonkamer
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.motion_lights_on_woonkamer_net_voor_zonsondergang.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 15}}

      '
  - condition: template
    value_template: '{{ states.sun.sun.state == "above_horizon"}}'
  - after: sunset
    after_offset: -00:25:00
    condition: sun
  action:
  - data:
      brightness: 50
      color_temp: 480
      entity_id:
      - light.sonoff_sfeerlicht_keuken
      - light.sonoff_lampje_tv
      - light.sonoff_lamp_ster
      - light.sonoff_schemerlamp_deur
      - light.sonoff_spoelbak_keuken
    service: light.turn_on
- id: 1565832131dsafs42
  alias: Motion Lights On woonkamer ochtend
  trigger:
  - entity_id: binary_sensor.presence_keuken
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_woonkamer
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sun.sun.state == "below_horizon" }}'
  - condition: template
    value_template: '{{ states.sensor.time.state > "06:00" and states.sensor.time.state
      < "10:00"}}'
  - condition: template
    value_template: '{% set last_triggered = states.automation.motion_lights_on_woonkamer_ochtend.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 15}}

      '
  action:
  - data:
      brightness: 50
      color_temp: 480
      entity_id:
      - light.lampen_eetkamertafel
      - light.lampen_keuken
    service: light.turn_on
- id: '1565863463634242'
  alias: Motion Lights On woonkamer nacht
  trigger:
  - entity_id: binary_sensor.presence_keuken
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_woonkamer
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sun.sun.state == "below_horizon" and states.sensor.time.state
      > "01:00" and states.sensor.time.state < "05:59"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: Alarm. Er is beweging in de woonkamer gedurende de nacht. Alarm. Opname geactiveerd met de beveiligings camera. Ik herhaal. Opname geactiveerd met de beveiligings camera.
      inline_keyboard: 'Sirene Aan:/siren-on, Alarm Uit:/alarm-off, Doe Niets:/removekeyboard'
  - data:
      brightness: 200
      color_temp: 328
      entity_id:
      - light.lampen_eetkamertafel
      - light.entree
      - light.lampen_woonkamer
      - light.lampen_keuken
    service: light.turn_on
- id: 'telegram_siren-on_Motion_woonkamer_nacht'
  alias: 'Telegram callback to switch on the siren when it was triggered due to movement in the night'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/siren-on'
  action:
  - data:
      entity_id:
      - switch.warning_device_garage
    service: switch.turn_on
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: Sirene aangezet ivm beweging in de woonkamer gedurende de nacht
      inline_keyboard: 'Laat Sirene Aan:/siren-on, Alarm Uit:/alarm-off, Doe Niets:/removekeyboard'
- id: 'telegram_alarm-off_Motion_woonkamer_nacht'
  alias: 'Telegram callback to switch off the alarm when it was triggered due to movement in the night'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/alarm-off'
  action:
  - data:
      entity_id: alarm_control_panel.home_alarm
      code: 1234
    service: alarm_control_panel.alarm_disarm
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zet het alarm voor je uit'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
- id: '1565948520644'
  alias: Miscellaneous Test Notifications
  trigger:
  - entity_id: input_boolean.test_notification
    platform: state
    to: 'on'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      CustomMessage: Het alarm is aangezet in de niet thuis modus om {{ states('sensor.date_time') }}.
      text_only: 1
- id: '1565949253532'
  alias: Alarm Fire eetkamer
  trigger:
  - entity_id: binary_sensor.rookmelder_eetk
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      message: Brandalarm in de eetkamer!
      title: Brandalarm!
    service: notify.pushbullet
  - data:
      message: Brandalarm in de eetkamer!
      title: Brandalarm!
    service: notify.pushbullet_suzanne
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_firealarm: 1
      kamer: eetkamer
  - service: notify.woonkamerandroidtv
    data:
      message: Alarm. Brandalarm in de eetkamer!
      title: Brandalarm!
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 1
- id: '1566035940355'
  alias: Miscellaneous Updating Zigbee2mqtt map
  trigger:
  - hours: /2
    platform: time_pattern
  action:
  - service: zigbee2mqtt_networkmap.update
- id: '1566058902091'
  alias: Switch Voordeurlamp
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tr_halbenedenr
      event: 1002
  condition: []
  action:
  - data:
      entity_id: light.sonoff_voord_lamp
    service: light.toggle
- id: 15658sfdsfsd4298
  alias: Motion Lights On slaapkamerdeur open
  trigger:
  - entity_id: binary_sensor.slaapkamerdeur
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "17:00" and states.sensor.time.state
      < "22:15"}}'
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_left_slaapkamer.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_slaapkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_right_slaapkamer_dag.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_slaapkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_bed_double_click.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_slaapkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_bed_long_click.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_slaapkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_bed_quad_click.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_slaapkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_bed_single_click_avond.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_slaapkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_bed_single_click_dag.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_slaapkamer_minutes.state
      | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_bed_triple_click.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_slaapkamer_minutes.state
      | int}}

      '
  - after: sunset
    condition: sun
  action:
  - data:
      transition: 1
      brightness_pct: 30
      kelvin: 2000
      entity_id:
      - light.slaapkamerlamp
    service: light.turn_on
  - data:
      entity_id: light.lampen_naast_bed
    service: light.turn_on
- id: '1566206740574'
  alias: Alert Door slaapkamerdeur open
  trigger:
  - entity_id: binary_sensor.slaapkamerdeur
    for: 00:10:00
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sensor.br_temperature.state | float > 15 }}'
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: slaapkamerdeur
      inline_keyboard: '10 min:/10m-slaapkamerdeur-open, 30 min:/30m-slaapkamerdeur-open, 3 uur:/3h-slaapkamerdeur-open, Geen herinnering:/removekeyboard'
  - service: notify.woonkamerandroidtv
    data:
      message: Kan iemand de slaapkamerdeur even dicht doen. Hij staat al {{((as_timestamp(now())-as_timestamp(states.binary_sensor.slaapkamerdeur.last_updated))
        | int /60) | int}} minuten open.
      title: Deur open
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: 'telegramrepeat_10m_slaapkamerdeur-open'
  alias: 'Telegram callback to repeat slaapkamerdeur-open message in 10 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/10m-slaapkamerdeur-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.slaapkamerdeur.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 10 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:10:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: slaapkamerdeur
      inline_keyboard: '10 min:/10m-slaapkamerdeur-open, 30 min:/30m-slaapkamerdeur-open, 3 uur:/3h-slaapkamerdeur-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_30m_slaapkamerdeur-open'
  alias: 'Telegram callback to repeat slaapkamerdeur-open message in 30 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/30m-slaapkamerdeur-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.slaapkamerdeur.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 30 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:30:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: slaapkamerdeur
      inline_keyboard: '10 min:/10m-slaapkamerdeur-open, 30 min:/30m-slaapkamerdeur-open, 3 uur:/3h-slaapkamerdeur-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_3h_slaapkamerdeur-open'
  alias: 'Telegram callback to repeat slaapkamerdeur-open message in 3 hours'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/3h-slaapkamerdeur-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.slaapkamerdeur.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 3 uren er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '03:00:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: slaapkamerdeur
      inline_keyboard: '10 min:/10m-slaapkamerdeur-open, 30 min:/30m-slaapkamerdeur-open, 3 uur:/3h-slaapkamerdeur-open, Geen herinnering:/removekeyboard'
- id: '1566210044120'
  alias: Motion Lights On Hal Boven
  trigger:
  - entity_id: binary_sensor.presence_hal_boven
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: light.lamp_hal_boven
    state: 'off'
  - condition: template
    value_template: '{{ states.sun.sun.state == "below_horizon"}}'
  - condition: template
    value_template: '{{((as_timestamp(now())-as_timestamp(states.light.lamp_hal_boven.last_updated))
      | int /60) > states.input_number.condition_motion_lights_on_hal_boven_minutes.state
      | int}}'
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_hal_beneden_links.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_hal_boven_minutes.state
      | int}}

      '
  action:
  - data:
      entity_id:
      - light.lamp_hal_boven
    service: light.turn_on
- id: '53453453453453453'
  alias: Motion Lights On Zolder
  trigger:
  - entity_id: binary_sensor.presence_zolder
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: light.zolder_lampen
    state: 'off'
  - condition: template
    value_template: '{{ states.sun.sun.state == "below_horizon"}}'
  - condition: template
    value_template: '{{((as_timestamp(now())-as_timestamp(states.light.zolder_lampen.last_updated))
      | int /60) > states.input_number.condition_motion_lights_on_zolder_minutes.state
      | int}}'
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_hal_boven_rechts.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.condition_motion_lights_on_zolder_minutes.state
      | int}}

      '
  action:
  - data:
      entity_id:
      - light.zolder_lampen
    service: light.turn_on
- id: 1567sdfsdfs2
  alias: Motion Lights Off Lichten Hal Boven
  trigger:
  - entity_id: binary_sensor.presence_hal_boven
    for: '{{(states.input_number.condition_motion_lights_off_hal_boven_minutes.state
      | int * 60) | timestamp_custom("%H:%M:%S", false) }}'
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: light.lamp_hal_boven
    state: 'on'
  action:
  - data:
      entity_id:
      - light.lamp_hal_boven
    service: light.turn_off
- id: 156hfdhdfhdffs2
  alias: Motion Lights Off Lichten Zolder
  trigger:
  - entity_id: binary_sensor.presence_zolder
    for: '{{(states.input_number.condition_motion_lights_off_zolder_minutes.state
      | int * 60) | timestamp_custom("%H:%M:%S", false) }}'
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: light.zolder_lampen
    state: 'on'
  action:
  - data:
      entity_id:
      - light.zolder_lampen
    service: light.turn_off
- id: 156hfgdfgdfdgs2
  alias: Motion Lights Off Lichten Chillkamer
  trigger:
  - entity_id: binary_sensor.presence_chillkamer
    for: '{{(states.input_number.condition_motion_lights_off_chillkamer_minutes.state
      | int * 60) | timestamp_custom("%H:%M:%S", false) }}'
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: light.lampen_chillkamer
    state: 'on'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  action:
  - data:
      entity_id:
      - light.lampen_chillkamer
    service: light.turn_off
- id: 156hhdfhdfghdfghgs2
  alias: Motion Lights Off Lichten Kamer Lars
  trigger:
  - entity_id: binary_sensor.presence_kamer_lars
    for: '{{(states.input_number.condition_motion_lights_off_kamer_lars_minutes.state
      | int * 60) | timestamp_custom("%H:%M:%S", false) }}'
    platform: state
    to: 'off'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.leeslamp_lars
      state: 'on'
    - condition: state
      entity_id: light.lamp_lars
      state: 'on'
  action:
  - data:
      entity_id:
      - light.lampen_kamer_lars
    service: light.turn_off
- id: 156hfghfdhdfghfdgs2
  alias: Motion Lights Off Lichten Kamer Nienke
  trigger:
  - entity_id: binary_sensor.presence_kamer_nienke
    for: '{{(states.input_number.condition_motion_lights_off_kamer_nienke_minutes.state
      | int * 60) | timestamp_custom("%H:%M:%S", false) }}'
    platform: state
    to: 'off'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.leeslamp_nienke
      state: 'on'
    - condition: state
      entity_id: light.lamp_nienke
      state: 'on'
  action:
  - data:
      entity_id:
      - light.lampen_kamer_nienke
    service: light.turn_off
- id: 1fsdfsdfsfdgs2
  alias: Motion Lights Off WC beneden
  trigger:
  - platform: template
    value_template: '{{((as_timestamp(now())-as_timestamp(states.light.lamp_wc_beneden.last_updated))
      | int /60) > states.input_number.condition_no_click_lights_off_wc_minutes.state
      | int}}'
  condition:
  - condition: state
    entity_id: light.lamp_wc_beneden
    state: 'on'
  action:
  - data:
      entity_id:
      - light.lamp_wc_beneden
    service: switch.turn_off
- id: 1fsdffsdfsdfss2
  alias: Motion Lights Off WC boven
  trigger:
  - platform: template
    value_template: '{{((as_timestamp(now())-as_timestamp(states.light.lamp_wc_boven.last_updated))
      | int /60) > states.input_number.condition_no_click_lights_off_wc_minutes.state
      | int}}'
  condition:
  - condition: state
    entity_id: light.lamp_wc_boven
    state: 'on'
  action:
  - data:
      entity_id:
      - light.lamp_wc_boven
    service: light.turn_off
- id: '1566551256211'
  alias: Switch Left Slaapkamer
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tr_slaapkamer
      event: 1002
  condition: []
  action:
  - data:
      entity_id: light.lampen_naast_bed
    service: light.toggle
- id: '1566553107821'
  alias: Switch Hal Beneden Links
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tr_halbenedenl
      event: 1002
  condition: []
  action:
  - data:
      entity_id: light.lamp_hal_boven
    service: light.toggle
- id: '1566721339730'
  alias: Alarm Fire garage
  trigger:
  - entity_id: binary_sensor.rookmelder_garage
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      message: Brandalarm in de garage!
      title: Brandalarm!
    service: notify.pushbullet
  - data:
      message: Brandalarm in de garage!
      title: Brandalarm!
    service: notify.pushbullet_suzanne
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_firealarm: 1
      kamer: garage
  - service: notify.woonkamerandroidtv
    data:
      message: Alarm. Brandalarm in de garage!
      title: Brandalarm!
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 1
- id: '1566808045196'
  alias: Timer Lights Off Lars slapen weekend
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.bedtijd_lars_weekend.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 4 or now().weekday() == 5 or states.binary_sensor.schoolvakantiedag.state == "on" }}'
  - condition: state
    entity_id: light.leeslamp_lars
    state: 'on'
  action:
  - data:
      entity_id:
      - light.lampen_kamer_lars
    service: light.turn_off
  - delay: 00:00:02
  - data:
      entity_id:
      - light.lampen_kamer_lars
    service: light.turn_on
  - delay: 00:00:30
  - data:
      entity_id:
      - light.lampen_kamer_lars
    service: light.turn_off
  - service: script.janet_speech_engine_lars
    data:
      call_weltrusten: 1
- id: '1566808045199'
  alias: Timer Lights Off Nienke slapen weekend
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.bedtijd_nienke_weekend.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 4 or now().weekday() == 5 or states.binary_sensor.schoolvakantiedag.state == "on" }}'
  - condition: state
    entity_id: light.leeslamp_nienke
    state: 'on'
  action:
  - data:
      entity_id:
      - light.lampen_kamer_nienke
    service: light.turn_off
  - delay: 00:00:02
  - data:
      entity_id:
      - light.leeslamp_nienke
    service: light.turn_on
  - delay: 00:00:30
  - data:
      entity_id:
      - light.leeslamp_nienke
    service: light.turn_off
- id: '1567073084091'
  alias: Miscellaneous Updating notification
  trigger:
  - entity_id: binary_sensor.updater
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_update: 1
      text_only: 1
- id: '1567163961466'
  alias: Timer Lights Off Lars wanneer zelf aangezet week
  trigger:
  - entity_id: light.leeslamp_lars
    for: 00:00:05
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > states.input_datetime.bedtijd_lars_week.state[0:5]
      }}'
  - condition: template
    value_template: '{{now().weekday() != 4 and now().weekday() != 5 and states.binary_sensor.schoolvakantiedag.state != "on"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  action:
  - data:
      entity_id:
      - light.leeslamp_lars
    service: light.turn_off
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_leeslamp_weer_aan: 1
      kind: Lars
  - service: notify.woonkamerandroidtv
    data:
      message: Let op, Lars zet zijn leeslamp weer aan
      title: Leeslamp Lars
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: '1567164684495'
  alias: Timer Lights Off Lars wanneer zelf aangezet weekend
  trigger:
  - entity_id: light.leeslamp_lars
    for: 00:00:05
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > states.input_datetime.bedtijd_lars_weekend.state[0:5]
      }}'
  - condition: template
    value_template: '{{now().weekday() == 4 or now().weekday() == 5 or states.binary_sensor.schoolvakantiedag.state == "on"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  action:
  - data:
      entity_id:
      - light.leeslamp_lars
    service: light.turn_off
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_leeslamp_weer_aan: 1
      kind: Lars
  - service: notify.woonkamerandroidtv
    data:
      message: Let op, Lars zet zijn leeslamp weer aan
      title: Leeslamp Lars
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: '1567357616230'
  alias: Switch Hal Boven Rechts
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tr_halbovenr
      event: 1002
  condition: []
  action:
  - data:
      entity_id: light.zolder_lampen
    service: light.toggle
- id: '1567403831598'
  alias: Alarm Fire hal boven
  trigger:
  - entity_id: binary_sensor.rookmelder_halboven
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      message: Brandalarm in de hal boven!
      title: Brandalarm!
    service: notify.pushbullet
  - data:
      message: Brandalarm in de hal boven!
      title: Brandalarm!
    service: notify.pushbullet_suzanne
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_firealarm: 1
      kamer: halboven
  - service: notify.woonkamerandroidtv
    data:
      message: Alarm. Brandalarm in de hal boven!
      title: Brandalarm!
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 1
- id: '1567403875618'
  alias: Alarm Fire zolder
  trigger:
  - entity_id: binary_sensor.rookmelder_zolder
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      message: Brandalarm op zolder!
      title: Brandalarm!
    service: notify.pushbullet
  - data:
      message: Brandalarm op zolder!
      title: Brandalarm!
    service: notify.pushbullet_suzanne
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_firealarm: 1
      kamer: zolder
  - service: notify.woonkamerandroidtv
    data:
      message: Alarm. Brandalarm op zolder!
      title: Brandalarm!
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 1
- id: '1567404023269'
  alias: 'Timer Lights Off Apparatuur Chillkamer '
  trigger:
  - at: '22:30:00'
    platform: time
  condition: []
  action:
  - data:
      entity_id:
      - switch.apparatuur_chillkamer
    service: switch.turn_off
- id: '1567404090182'
  alias: 'Timer Lights On Apparatuur Chillkamer '
  trigger:
  - at: 07:15:00
    platform: time
  condition: []
  action:
  - data:
      entity_id:
      - switch.apparatuur_chillkamer
    service: switch.turn_on
- id: '1567404908864'
  alias: Alert Window Dakraam badkamer open bij regen voorspelling
  trigger:
  - platform: template
    value_template: '{{ states.sensor.br_precipitation_forecast_average.state | float
      > 0.1}}'
  condition:
  - condition: state
    entity_id: binary_sensor.dakraam_badkamer
    state: 'on'
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: badkamer
      inline_keyboard: '10 min:/10m-dakraambadkamer-open, 30 min:/30m-dakraambadkamer-open, 3 uur:/3h-dakraambadkamer-open, Geen herinnering:/removekeyboard'
  - service: notify.woonkamerandroidtv
    data:
      message: Het gaat waarschijnlijk regenen en het dakraam in de badkamer is nog
        open!
      title: Regen op komst!
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: 'telegramrepeat_10m_dakraambadkamer-open'
  alias: 'Telegram callback to repeat dakraambadkamer-open message in 10 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/10m-dakraambadkamer-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_badkamer.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 10 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:10:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: badkamer
      inline_keyboard: '10 min:/10m-dakraambadkamer-open, 30 min:/30m-dakraambadkamer-open, 3 uur:/3h-dakraambadkamer-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_30m_dakraambadkamer-open'
  alias: 'Telegram callback to repeat dakraambadkamer-open message in 30 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/30m-dakraambadkamer-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_badkamer.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 30 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:30:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: badkamer
      inline_keyboard: '10 min:/10m-dakraambadkamer-open, 30 min:/30m-dakraambadkamer-open, 3 uur:/3h-dakraambadkamer-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_3h_dakraambadkamer-open'
  alias: 'Telegram callback to repeat dakraambadkamer-open message in 3 hours'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/3h-dakraambadkamer-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_badkamer.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 3 uren er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '03:00:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: badkamer
      inline_keyboard: '10 min:/10m-dakraambadkamer-open, 30 min:/30m-dakraambadkamer-open, 3 uur:/3h-dakraambadkamer-open, Geen herinnering:/removekeyboard'
- id: 15674049gfdgd64
  alias: Alert Window Dakraam chillkamer open bij regen voorspelling
  trigger:
  - platform: template
    value_template: '{{ states.sensor.br_precipitation_forecast_average.state | float
      > 0.1}}'
  condition:
  - condition: state
    entity_id: binary_sensor.dakraam_chillkamer
    state: 'on'
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: chillkamer
      inline_keyboard: '10 min:/10m-dakraamchillkamer-open, 30 min:/30m-dakraamchillkamer-open, 3 uur:/3h-dakraamchillkamer-open, Geen herinnering:/removekeyboard'
  - service: notify.woonkamerandroidtv
    data:
      message: Het gaat waarschijnlijk regenen en het dakraam in de chillkamer is
        nog open!
      title: Regen op komst!
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: 'telegramrepeat_10m_dakraamchillkamer-open'
  alias: 'Telegram callback to repeat dakraamchillkamer-open message in 10 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/10m-dakraamchillkamer-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_chillkamer.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 10 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:10:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: chillkamer
      inline_keyboard: '10 min:/10m-dakraamchillkamer-open, 30 min:/30m-dakraamchillkamer-open, 3 uur:/3h-dakraamchillkamer-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_30m_dakraamchillkamer-open'
  alias: 'Telegram callback to repeat dakraamchillkamer-open message in 30 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/30m-dakraamchillkamer-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_chillkamer.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 30 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:30:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: chillkamer
      inline_keyboard: '10 min:/10m-dakraamchillkamer-open, 30 min:/30m-dakraamchillkamer-open, 3 uur:/3h-dakraamchillkamer-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_3h_dakraamchillkamer-open'
  alias: 'Telegram callback to repeat dakraamchillkamer-open message in 3 hours'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/3h-dakraamchillkamer-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_chillkamer.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 3 uren er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '03:00:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: chillkamer
      inline_keyboard: '10 min:/10m-dakraamchillkamer-open, 30 min:/30m-dakraamchillkamer-open, 3 uur:/3h-dakraamchillkamer-open, Geen herinnering:/removekeyboard'
- id: 1567dsadadasda
  alias: Alert Window Dakraam slaapkamer open bij regen voorspelling
  trigger:
  - platform: template
    value_template: '{{ states.sensor.br_precipitation_forecast_average.state | float
      > 0.1}}'
  condition:
  - condition: state
    entity_id: binary_sensor.dakraam_slaapkamer
    state: 'on'
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: slaapkamer
      inline_keyboard: '10 min:/10m-dakraamslaapkamer-open, 30 min:/30m-dakraamslaapkamer-open, 3 uur:/3h-dakraamslaapkamer-open, Geen herinnering:/removekeyboard'
  - service: notify.woonkamerandroidtv
    data:
      message: Het gaat waarschijnlijk regenen en het dakraam in de slaapkamer is
        nog open!
      title: Regen op komst!
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: 'telegramrepeat_10m_dakraamslaapkamer-open'
  alias: 'Telegram callback to repeat dakraamslaapkamer-open message in 10 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/10m-dakraamslaapkamer-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_slaapkamer.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 10 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:10:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: slaapkamer
      inline_keyboard: '10 min:/10m-dakraamslaapkamer-open, 30 min:/30m-dakraamslaapkamer-open, 3 uur:/3h-dakraamslaapkamer-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_30m_dakraamslaapkamer-open'
  alias: 'Telegram callback to repeat dakraamslaapkamer-open message in 30 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/30m-dakraamslaapkamer-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_slaapkamer.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 30 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:30:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: slaapkamer
      inline_keyboard: '10 min:/10m-dakraamslaapkamer-open, 30 min:/30m-dakraamslaapkamer-open, 3 uur:/3h-dakraamslaapkamer-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_3h_dakraamslaapkamer-open'
  alias: 'Telegram callback to repeat dakraamslaapkamer-open message in 3 hours'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/3h-dakraamslaapkamer-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_slaapkamer.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 3 uren er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '03:00:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: slaapkamer
      inline_keyboard: '10 min:/10m-dakraamslaapkamer-open, 30 min:/30m-dakraamslaapkamer-open, 3 uur:/3h-dakraamslaapkamer-open, Geen herinnering:/removekeyboard'
- id: 1567dsfsdfsdfsa
  alias: Alert Window Dakraam zolder open bij regen voorspelling
  trigger:
  - platform: template
    value_template: '{{ states.sensor.br_precipitation_forecast_average.state | float
      > 0.1}}'
  condition:
  - condition: state
    entity_id: binary_sensor.dakraam_zolder
    state: 'on'
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: zolder
      inline_keyboard: '10 min:/10m-dakraamzolder-open, 30 min:/30m-dakraamzolder-open, 3 uur:/3h-dakraamzolder-open, Geen herinnering:/removekeyboard'
  - service: notify.woonkamerandroidtv
    data:
      message: Het gaat waarschijnlijk regenen en het dakraam op zolder is nog open!
      title: Regen op komst!
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: 'telegramrepeat_10m_dakraamzolder-open'
  alias: 'Telegram callback to repeat dakraamzolder-open message in 10 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/10m-dakraamzolder-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_zolder.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 10 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:10:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: zolder
      inline_keyboard: '10 min:/10m-dakraamzolder-open, 30 min:/30m-dakraamzolder-open, 3 uur:/3h-dakraamzolder-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_30m_dakraamzolder-open'
  alias: 'Telegram callback to repeat dakraamzolder-open message in 30 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/30m-dakraamzolder-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_zolder.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 30 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:30:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: zolder
      inline_keyboard: '10 min:/10m-dakraamzolder-open, 30 min:/30m-dakraamzolder-open, 3 uur:/3h-dakraamzolder-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_3h_dakraamzolder-open'
  alias: 'Telegram callback to repeat dakraamzolder-open message in 3 hours'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/3h-dakraamzolder-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.dakraam_zolder.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 3 uren er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '03:00:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_no_announcement: 1
      call_warning_rain: 1
      kamer: zolder
      inline_keyboard: '10 min:/10m-dakraamzolder-open, 30 min:/30m-dakraamzolder-open, 3 uur:/3h-dakraamzolder-open, Geen herinnering:/removekeyboard'
- id: '1567498146613'
  alias: Switch Eetkamertafel
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tr_eetktafel
      event: 1002
  condition:
  action:
  - data_template:
      brightness: '{%set last_triggered = states.automation.switch_eetkamertafel.attributes.last_triggered
        %} {{50 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 200}}'
      color_temp: '{%set last_triggered = states.automation.switch_eetkamertafel.attributes.last_triggered
        %} {{500 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 328}}'
      entity_id: light.lampen_eetkamertafel
    service: light.toggle
- id: '1567498750920'
  alias: Switch Lampen TV
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tr_boventv
      event: 1002
  condition:
  action:
  - data_template:
      brightness: '{%set last_triggered = states.automation.switch_lampen_tv.attributes.last_triggered
        %} {{50 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 200}}'
      color_temp: '{%set last_triggered = states.automation.switch_lampen_tv.attributes.last_triggered
        %} {{500 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 328}}'
      entity_id: light.boventv
    service: light.toggle
- id: '1567499031613'
  alias: Switch Right Keuken
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tr_keuken
      event: 2002
  condition:
  action:
  - data_template:
      brightness: '{%set last_triggered = states.automation.switch_right_keuken.attributes.last_triggered
        %} {{50 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 200}}'
      entity_id: light.bar
    service: light.toggle
- id: '1567499187287'
  alias: Switch Left Keuken
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tr_keuken
      event: 1002
  condition:
  action:
  - data_template:
      brightness: '{%set last_triggered = states.automation.switch_left_keuken.attributes.last_triggered
        %} {{50 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 200}}'
      entity_id: light.lampen_keuken_zonder_bar
    service: light.toggle
- id: '1567499447359'
  alias: Switch Right Hal Beneden Midden
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tr_halbenedenm
      event: 2002
  condition:
  action:
  - data_template:
      brightness: '{%set last_triggered = states.automation.switch_right_hal_beneden_midden.attributes.last_triggered
        %} {{50 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 200}}'
      entity_id: light.entree
    service: light.toggle
- id: '1567499560704'
  alias: Switch Left Hal Beneden Midden
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tr_halbenedenm
      event: 1002
  condition:
  action:
  - data_template:
      brightness: '{%set last_triggered = states.automation.switch_left_hal_beneden_midden.attributes.last_triggered
        %} {{50 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 200}}'
      entity_id: light.lampen_hal
    service: light.toggle
- id: '1567499748758'
  alias: Switch Right Slaapkamer
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tr_slaapkamer
      event: 2002
  condition:
  action:
  - data_template:
      brightness_pct: '{%set last_triggered = states.automation.switch_right_slaapkamer.attributes.last_triggered
        %} {{20 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 100}}'
      transition: 1
      kelvin: 2000
      entity_id: light.slaapkamerlamp
    service: light.toggle
- id: '1567499930968'
  alias: Switch Woonkamerdeur lichten aan
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_woonkamer
      event: 1003
  condition:
  action:
  - data_template:
      brightness: '{%set last_triggered = states.automation.switch_woonkamerdeur_lichten_aan.attributes.last_triggered
        %} {{50 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 200}}'
      color_temp: '{%set last_triggered = states.automation.switch_woonkamerdeur_lichten_aan.attributes.last_triggered
        %} {{500 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 328}}'
      entity_id:
      - light.lampen_eetkamertafel
      - light.lampen_woonkamer
      - light.lampen_keuken
    service: light.turn_on
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      CustomMessage: Ik heb de lampen in de woonkamer voor je gedimd aangezet.
      text_only: 1
- id: '1567645645668'
  alias: Switch Eetkamerdeur lichten aan
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_eetkamer
      event: 1003
  condition:
  action:
  - data_template:
      brightness: '{%set last_triggered = states.automation.switch_eetkamerdeur_lichten_aan.attributes.last_triggered
        %} {{50 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 200}}'
      color_temp: '{%set last_triggered = states.automation.switch_eetkamerdeur_lichten_aan.attributes.last_triggered
        %} {{500 if last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
        | int ) > 2 and states.sun.sun.state == "below_horizon" else 328}}'
      entity_id:
      - light.lampen_eetkamertafel
      - light.lampen_woonkamer
      - light.lampen_keuken
    service: light.turn_on
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      CustomMessage: Ik heb de lampen in de woonkamer voor je gedimd aangezet.
      text_only: 1
- id: '1567502350372'
  alias: Miscellaneous Test timer
  trigger:
  - entity_id: sensor.test_click
    platform: state
    to: single
  condition: []
  action:
  - data:
      brightness: 200
      entity_id:
      - light.bar
    service: light.toggle
  - delay: 00:00:05
  - service: timer.pause
    entity_id: timer.fan_on_timer
  - delay: 00:00:05
  - data_template:
      duration: '{{ (states.timer.fan_on_timer.attributes.remaining [0:1] | int *
        3600 + states.timer.fan_on_timer.attributes.remaining [2:4] | int * 60 + states.timer.fan_on_timer.attributes.remaining
        [5:7] | int + states.input_number.fan_boost_wc.state | int * 60) | timestamp_custom("%H:%M:%S",
        false) }}'
      entity_id: timer.fan_on_timer
    service: timer.start
- id: '1567525190162'
  alias: Humidity FanBoost ivm gebruik WC beneden
  trigger:
  - entity_id: light.lamp_wc_beneden
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.humidity_fanboost_ivm_gebruik_wc_beneden.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.fan_boost_wc.state | int}}

      '
  action:
  - delay: 00:00:02
  - service: timer.pause
    entity_id: timer.fan_on_timer
  - delay: 00:00:02
  - data_template:
      duration: '{{ (states.timer.fan_on_timer.attributes.remaining [0:1] | int *
        3600 + states.timer.fan_on_timer.attributes.remaining [2:4] | int * 60 + states.timer.fan_on_timer.attributes.remaining
        [5:7] | int + states.input_number.fan_boost_wc.state | int * 60) | timestamp_custom("%H:%M:%S",
        false) }}'
      entity_id: timer.fan_on_timer
    service: timer.start
- id: 156752sdfsdfs62
  alias: Humidity FanBoost ivm gebruik WC boven
  trigger:
  - entity_id: light.lamp_wc_boven
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.humidity_fanboost_ivm_gebruik_wc_boven.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > states.input_number.fan_boost_wc.state | int}}

      '
  action:
  - delay: 00:00:02
  - service: timer.pause
    entity_id: timer.fan_on_timer
  - delay: 00:00:02
  - data_template:
      duration: '{{ (states.timer.fan_on_timer.attributes.remaining [0:1] | int *
        3600 + states.timer.fan_on_timer.attributes.remaining [2:4] | int * 60 + states.timer.fan_on_timer.attributes.remaining
        [5:7] | int + states.input_number.fan_boost_wc.state | int * 60) | timestamp_custom("%H:%M:%S",
        false) }}'
      entity_id: timer.fan_on_timer
    service: timer.start
- id: 156752sdfsfhsdhs2
  alias: Humidity FanBoost ivm gebruik douche
  trigger:
  - platform: template
    value_template: '{{ states.sensor.hum_delta_douche_vs_indoor_average.state | float
      > states.input_number.hum_delta_afzuiging_on.state | float }}'
  - platform: template
    value_template: '{{ states.sensor.hum_douche_change.state | float > 10 }}'
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.humidity_fanboost_ivm_gebruik_douche.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > (states.input_number.fan_boost_badkamer.state | int)/2}}

      '
  - condition: template
    value_template: '{{states.sensor.hum_delta_douche_vs_indoor_average.state !="unknown"
      or states.sensor.hum_delta_douche_vs_indoor_average.state != "unavailable"}}'
  - condition: template
    value_template: '{{states.sensor.average_house_humidity.attributes.min_value |
      int != 0}}'
  action:
  - entity_id: timer.fan_on_timer
    service: timer.pause
  - delay: 00:00:02
  - data_template:
      duration: '{{ (states.timer.fan_on_timer.attributes.remaining [0:1] | int *
        3600 + states.timer.fan_on_timer.attributes.remaining [2:4] | int * 60 + states.timer.fan_on_timer.attributes.remaining
        [5:7] | int + states.input_number.fan_boost_badkamer.state | int * 60) | timestamp_custom("%H:%M:%S",
        false) }}'
      entity_id: timer.fan_on_timer
    service: timer.start
- id: 156752sdfgdfgdfgds2
  alias: Humidity FanBoost ivm gebruik gasfornuis
  trigger:
  - platform: template
    value_template: '{{ states.sensor.hum_delta_keuken_vs_indoor_average.state | float
      > states.input_number.hum_delta_afzuiging_on.state | float }}'
  - platform: template
    value_template: '{{ states.sensor.hum_keuken_change.state | float > 10 }}'
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.humidity_fanboost_ivm_gebruik_gasfornuis.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > (states.input_number.fan_boost_keuken.state | int)/2}}

      '
  - condition: template
    value_template: '{{states.sensor.hum_delta_keuken_vs_indoor_average.state !="unknown"
      or states.sensor.hum_delta_keuken_vs_indoor_average.state != "unavailable"}}'
  - condition: template
    value_template: '{{states.sensor.average_house_humidity.attributes.min_value |
      int != 0}}'
  action:
  - entity_id: timer.fan_on_timer
    service: timer.pause
  - delay: 00:00:02
  - data_template:
      duration: '{{ (states.timer.fan_on_timer.attributes.remaining [0:1] | int *
        3600 + states.timer.fan_on_timer.attributes.remaining [2:4] | int * 60 + states.timer.fan_on_timer.attributes.remaining
        [5:7] | int + states.input_number.fan_boost_keuken.state | int * 60) | timestamp_custom("%H:%M:%S",
        false) }}'
      entity_id: timer.fan_on_timer
    service: timer.start
- id: 156752sdgsdfgdgd2
  alias: Temperatuur FanBoost ivm gebruik gasfornuis
  trigger:
  - platform: template
    value_template: '{{ states.sensor.temp_delta_keuken_vs_indoor_average.state |
      float > states.input_number.temp_delta_afzuiging_on.state | float }}'
  - platform: template
    value_template: '{{ states.sensor.temp_delta_keuken_vs_keuken_mean.state | float
      > states.input_number.temp_delta_afzuiging_on.state | float }}'
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.humidity_fanboost_ivm_gebruik_gasfornuis.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > (states.input_number.fan_boost_keuken.state | int)}}

      '
  - condition: template
    value_template: '{{states.sensor.hum_delta_keuken_vs_indoor_average.state | float
      > -25}}'
  - condition: template
    value_template: '{{states.sensor.hum_delta_keuken_vs_indoor_average.state | float
      < 25}}'
  action:
  - entity_id: timer.fan_on_timer
    service: timer.pause
  - delay: 00:00:02
  - data_template:
      duration: '{{ (states.timer.fan_on_timer.attributes.remaining [0:1] | int *
        3600 + states.timer.fan_on_timer.attributes.remaining [2:4] | int * 60 + states.timer.fan_on_timer.attributes.remaining
        [5:7] | int + states.input_number.fan_boost_keuken.state | int * 60) | timestamp_custom("%H:%M:%S",
        false) }}'
      entity_id: timer.fan_on_timer
    service: timer.start
- id: '1567578306274'
  alias: Humidity FanBoost On
  trigger:
  - event_data:
      entity_id: timer.fan_on_timer
    event_type: timer.started
    platform: event
  - event_data:
      entity_id: timer.fan_on_timer
    event_type: timer.restarted
    platform: event
  condition: []
  action:
  - data:
      entity_id: light.sonoff_centrale_afzuiging_boost
    service: light.turn_on
- id: '1567578357058'
  alias: Humidity FanBoost Off
  trigger:
  - event_data:
      entity_id: timer.fan_on_timer
    event_type: timer.finished
    platform: event
  - platform: template
    value_template: '{{ states.sensor.hum_delta_douche_vs_indoor_average.state | float
      < states.input_number.hum_delta_afzuiging_off.state | float }}'
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.humidity_fanboost_ivm_gebruik_wc_beneden.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > (states.input_number.fan_boost_wc.state | int)}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.humidity_fanboost_ivm_gebruik_wc_boven.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > (states.input_number.fan_boost_wc.state | int)}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.humidity_fanboost_ivm_gebruik_gasfornuis.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > (states.input_number.fan_boost_keuken.state | int)}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.humidity_fanboost_ivm_gebruik_douche.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > (states.input_number.min_fan_boost_badkamer.state | int)}}

      '
  - condition: template
    value_template: '{{states.sensor.hum_delta_douche_vs_indoor_average.state | float
      > -25}}'
  action:
  - data:
      entity_id: light.sonoff_centrale_afzuiging_boost
    service: light.turn_off
- id: '1567622962374'
  alias: Alert Other zout voorraad
  trigger:
  - entity_id: binary_sensor.zout_sensor
    for: 00:05:00
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      CustomMessage: Let op. De voorraad zout in de waterontharder is op. Graag bijvullen.
      text_only: 1
  - service: notify.woonkamerandroidtv
    data:
      message: De voorraad zout in de waterontharder is op. Graag bijvullen.
      title: Zoutvoorraad op!
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: '1567681847639'
  alias: Timer Lights Off Nienke wanneer zelf aangezet week
  trigger:
  - entity_id: light.leeslamp_nienke
    for: 00:00:05
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > states.input_datetime.bedtijd_nienke_week.state[0:5]
      }}'
  - condition: template
    value_template: '{{now().weekday() != 4 and now().weekday() != 5 and states.binary_sensor.schoolvakantiedag.state != "on"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  action:
  - data:
      entity_id:
      - light.leeslamp_nienke
    service: light.turn_off
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_leeslamp_weer_aan: 1
      kind: Nienke
  - service: notify.woonkamerandroidtv
    data:
      message: Let op, Nienke zet haar leeslamp weer aan
      title: Leeslamp Nienke
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: '1567681967009'
  alias: Timer Lights Off Nienke wanneer zelf aangezet weekend
  trigger:
  - entity_id: light.leeslamp_nienke
    for: 00:00:05
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > states.input_datetime.bedtijd_nienke_weekend.state[0:5]
      }}'
  - condition: template
    value_template: '{{now().weekday() == 4 or now().weekday() == 5 or states.binary_sensor.schoolvakantiedag.state == "on"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  action:
  - data:
      entity_id:
      - light.leeslamp_nienke
    service: light.turn_off
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_leeslamp_weer_aan: 1
      kind: Nienke
  - service: notify.woonkamerandroidtv
    data:
      message: Let op, Nienke zet haar leeslamp weer aan
      title: Leeslamp Nienke
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: '1567758752083'
  alias: Check Lights Lampen keuken check all on
  trigger:
  - platform: template
    value_template: '{{states.light.keuken_1.state != states.light.keuken_2.state}}'
    for: 00:01:00
  condition: []
  action:
  - data:
      entity_id:
      - light.keuken_1
      - light.keuken_2
    service: light.turn_on
- id: '1567758910747'
  alias: Check Lights Lampen bar check all on
  trigger:
  - platform: template
    value_template: '{{states.light.bar_1.state != states.light.bar_2.state or states.light.bar_1.state
      != states.light.bar_3.state or states.light.bar_2.state != states.light.bar_3.state
      }}'
    for: 00:01:00
  condition: []
  action:
  - data:
      entity_id:
      - light.bar_1
      - light.bar_2
      - light.bar_3
    service: light.turn_on
- id: '1567759311125'
  alias: Check Lights Lampen hal check all on
  trigger:
  - platform: template
    value_template: '{{states.light.hal_1.state != states.light.hal_2.state or states.light.hal_1.state
      != states.light.hal_3.state or states.light.hal_1.state != states.light.hal_4.state
      or states.light.hal_2.state != states.light.hal_3.state  or states.light.hal_2.state
      != states.light.hal_4.state  or states.light.hal_3.state != states.light.hal_4.state}}'
    for: 00:01:00
  condition: []
  action:
  - data:
      entity_id:
      - light.hal_1
      - light.hal_2
      - light.hal_3
      - light.hal_4
    service: light.turn_on
- id: '1567759402908'
  alias: Check Lights Lampen entree check all on
  trigger:
  - platform: template
    value_template: '{{states.light.entree_1.state != states.light.entree_2.state}}'
    for: 00:01:00
  condition: []
  action:
  - data:
      entity_id:
      - light.entree_1
      - light.entree_2
    service: light.turn_on
- id: '1567759474287'
  alias: Check Lights Lampen tv check all on
  trigger:
  - platform: template
    value_template: '{{states.light.boventv_1.state != states.light.boventv_2.state}}'
    for: 00:01:00
  condition: []
  action:
  - data:
      entity_id:
      - light.boventv_1
      - light.boventv_2
    service: light.turn_on
- id: '1567777380113'
  alias: Alert Door bijkeukendeur open
  trigger:
  - entity_id: binary_sensor.bijkeukendeur
    for: 00:10:00
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sensor.temp_keuken.state | float - states.sensor.temp_bijkeuken.state
      | float > 5}}'
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: bijkeukendeur
      inline_keyboard: '10 min:/10m-bijkeukendeur-open, 30 min:/30m-bijkeukendeur-open, 3 uur:/3h-bijkeukendeur-open, Geen herinnering:/removekeyboard'
  - service: notify.woonkamerandroidtv
    data:
      message: Deur bijkeuken {{((as_timestamp(now())-as_timestamp(states.binary_sensor.bijkeukendeur.last_updated))
        | int /60) | int}} minuten open
      title: Deur open
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: 'telegramrepeat_10m_bijkeukendeur-open'
  alias: 'Telegram callback to repeat bijkeukendeur-open message in 10 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/10m-bijkeukendeur-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.bijkeukendeur.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 10 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:10:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: bijkeukendeur
      inline_keyboard: '10 min:/10m-bijkeukendeur-open, 30 min:/30m-bijkeukendeur-open, 3 uur:/3h-bijkeukendeur-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_30m_bijkeukendeur-open'
  alias: 'Telegram callback to repeat bijkeukendeur-open message in 30 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/30m-bijkeukendeur-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.bijkeukendeur.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 30 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:30:00'
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: bijkeukendeur
      inline_keyboard: '10 min:/10m-bijkeukendeur-open, 30 min:/30m-bijkeukendeur-open, 3 uur:/3h-bijkeukendeur-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_3h_bijkeukendeur-open'
  alias: 'Telegram callback to repeat bijkeukendeur-open message in 3 hours'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/3h-bijkeukendeur-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.bijkeukendeur.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 3 uren er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '03:00:00'
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: bijkeukendeur
      inline_keyboard: '10 min:/10m-bijkeukendeur-open, 30 min:/30m-bijkeukendeur-open, 3 uur:/3h-bijkeukendeur-open, Geen herinnering:/removekeyboard'
- id: '1567777566517'
  alias: Alert Door garagedeur open
  trigger:
  - entity_id: binary_sensor.garagedeur
    for: 00:07:00
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: garagedeur
      inline_keyboard: '10 min:/10m-garagedeur-open, 30 min:/30m-garagedeur-open, 3 uur:/3h-garagedeur-open, Geen herinnering:/removekeyboard'
  - service: notify.woonkamerandroidtv
    data:
      message: Garagedeur {{((as_timestamp(now())-as_timestamp(states.binary_sensor.garagedeur.last_updated))
        | int /60) | int}} minuten open
      title: Garagedeur open
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: 'telegramrepeat_10m_garagedeur-open'
  alias: 'Telegram callback to repeat garagedeur-open message in 10 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/10m-garagedeur-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.garagedeur.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 10 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:10:00'  
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: garagedeur
      inline_keyboard: '10 min:/10m-garagedeur-open, 30 min:/30m-garagedeur-open, 3 uur:/3h-garagedeur-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_30m_garagedeur-open'
  alias: 'Telegram callback to repeat garagedeur-open message in 30 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/30m-garagedeur-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.garagedeur.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 30 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:30:00'
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: garagedeur
      inline_keyboard: '10 min:/10m-garagedeur-open, 30 min:/30m-garagedeur-open, 3 uur:/3h-garagedeur-open, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_3h_garagedeur-open'
  alias: 'Telegram callback to repeat garagedeur-open message in 3 hours'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/3h-garagedeur-open'
  condition:
  - condition: template
    value_template: '{{ states.binary_sensor.garagedeur.state == "on"}}'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 3 uren er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '03:00:00'
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_deur_lang_open: 1
      deur: garagedeur
      inline_keyboard: '10 min:/10m-garagedeur-open, 30 min:/30m-garagedeur-open, 3 uur:/3h-garagedeur-open, Geen herinnering:/removekeyboard'
- id: thermo_on_mo1
  alias: Timer Heating On thermostaat aan ma 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_mo1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 0}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_mo1
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.thuis_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.thuis_eco_off.state }}'
- id: thermo_off_mo1
  alias: Timer Heating Off thermostaat uit ma 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_mo1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 0}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: away
- id: thermo_on_tu1
  alias: Timer Heating On thermostaat aan di 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_tu1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 1}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_tu1
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.thuis_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.thuis_eco_off.state }}'
- id: thermo_off_tu1
  alias: Timer Heating Off thermostaat uit di 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_tu1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 1}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: away
- id: thermo_on_we1
  alias: Timer Heating On thermostaat aan wo 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_we1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 2}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_we1
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.thuis_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.thuis_eco_off.state }}'
- id: thermo_off_we1
  alias: Timer Heating Off thermostaat uit wo 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_we1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 2}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: away
- id: thermo_on_th1
  alias: Timer Heating On thermostaat aan do 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_th1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 3}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_th1
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.thuis_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.thuis_eco_off.state }}'
- id: thermo_off_th1
  alias: Timer Heating Off thermostaat uit do 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_th1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 3}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: away
- id: thermo_on_fr1
  alias: Timer Heating On thermostaat aan vr 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_fr1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 4}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_fr1
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.thuis_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.thuis_eco_off.state }}'
- id: thermo_off_fr1
  alias: Timer Heating Off thermostaat uit vr 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_fr1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 4}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: away
- id: thermo_on_sa1
  alias: Timer Heating On thermostaat aan za 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_sa1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 5}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_sa1
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.thuis_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.thuis_eco_off.state }}'
- id: thermo_off_sa1
  alias: Timer Heating Off thermostaat uit za 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_sa1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 5}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: away
- id: thermo_on_su1
  alias: Timer Heating On thermostaat aan zo 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_su1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 6}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_su1
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.thuis_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.thuis_eco_off.state }}'
- id: thermo_off_su1
  alias: Timer Heating Off thermostaat uit zo 1
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_su1.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 6}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: away
- id: thermo_on_mo2
  alias: Timer Heating On thermostaat aan ma 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_mo2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 0}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_mo2
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.comfort_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.comfort_eco_off.state }}'
- id: thermo_off_mo2
  alias: Timer Heating Off thermostaat uit ma 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_mo2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 0}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: sleep
- id: thermo_on_tu2
  alias: Timer Heating On thermostaat aan di 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_tu2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 1}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_tu2
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.comfort_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.comfort_eco_off.state }}'
- id: thermo_off_tu2
  alias: Timer Heating Off thermostaat uit di 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_tu2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 1}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: sleep
- id: thermo_on_we2
  alias: Timer Heating On thermostaat aan wo 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_we2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 2}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_we2
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.comfort_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.comfort_eco_off.state }}'
- id: thermo_off_we2
  alias: Timer Heating Off thermostaat uit wo 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_we2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 2}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: sleep
- id: thermo_on_th2
  alias: Timer Heating On thermostaat aan do 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_th2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 3}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_th2
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.comfort_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.comfort_eco_off.state }}'
- id: thermo_off_th2
  alias: Timer Heating Off thermostaat uit do 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_th2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 3}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: sleep
- id: thermo_on_fr2
  alias: Timer Heating On thermostaat aan vr 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_fr2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 4}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_fr2
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.comfort_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.comfort_eco_off.state }}'
- id: thermo_off_fr2
  alias: Timer Heating Off thermostaat uit vr 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_fr2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 4}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: sleep
- id: thermo_on_sa2
  alias: Timer Heating On thermostaat aan za 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_sa2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 5}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_sa2
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.comfort_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.comfort_eco_off.state }}'
- id: thermo_off_sa2
  alias: Timer Heating Off thermostaat uit za 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_sa2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 5}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: sleep
- id: thermo_on_su2
  alias: Timer Heating On thermostaat aan zo 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_on_su2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  - condition: template
    value_template: '{{now().weekday() == 6}}'
  - condition: state
    entity_id: input_boolean.thermostat_schedule
    state: 'on'
  - condition: state
    entity_id: input_boolean.thermostat_schedule_su2
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.toon_thermostat
      temperature: '{{ states.input_number.comfort_eco_on.state if states.input_boolean.eco_modus.state
        == "on" else states.input_number.comfort_eco_off.state }}'
- id: thermo_off_su2
  alias: Timer Heating Off thermostaat uit zo 2
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.thermostat_off_su2.state[0:5]
      }}'
  condition:
  - condition: template
    value_template: '{{now().weekday() == 6}}'
  action:
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: sleep
- id: '1568034781160'
  alias: Status Night
  trigger:
  - event: sunset
    platform: sun
  condition: []
  action:
  - data:
      value: 1
      entity_id: input_number.nighttime
    service: input_number.set_value
- id: '15680345353160'
  alias: Status Day
  trigger:
  - event: sunrise
    platform: sun
  condition: []
  action:
  - data:
      value: 0
      entity_id: input_number.nighttime
    service: input_number.set_value
- id: 156dgdfgdfgd60
  alias: Humidity Fan on
  trigger:
  - entity_id: light.sonoff_centrale_afzuiging_boost
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - data:
      value: 1
      entity_id: input_number.fan_on_off
    service: input_number.set_value
- id: 156dgjhlkhjlgd60
  alias: Humidity Fan off
  trigger:
  - entity_id: light.sonoff_centrale_afzuiging_boost
    platform: state
    to: 'off'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - data:
      value: 0
      entity_id: input_number.fan_on_off
    service: input_number.set_value
- id: '1568449843109'
  alias: Miscellaneous Updating sensors
  trigger:
  - at: 00:10:00
    platform: time
  condition: []
  action:
  - service: homeassistant.update_entity
    entity_id:
    - sensor.dagen_tot_carnavalvakantie
    - sensor.dagen_tot_grote_vakantie
    - sensor.dagen_tot_herstvakantie
    - sensor.dagen_tot_kerst
    - sensor.dagen_tot_kerstvakantie
    - sensor.dagen_tot_meivakantie
    - sensor.dagen_tot_sinterklaas
    - sensor.dagen_tot_verjaardag_lars
    - sensor.dagen_tot_verjaardag_nienke
    - sensor.dagen_tot_verjaardag_suzanne
    - sensor.dagen_tot_verjaardag_martijn
- id: '1568738037540'
  alias: Alert Other wasmachine klaar
  trigger:
  - platform: state
    entity_id: input_select.washing_machine_status
    to: Schoon
  condition:
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: De wasmachine is klaar.
      inline_keyboard: '10 min:/10m-wasmachine, 30 min:/30m-wasmachine, 3 uur:/3h-wasmachine, Geen herinnering:/removekeyboard'
  - service: notify.woonkamerandroidtv
    data:
      message: De wasmachine is klaar.
      title: Wasmachine
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: 'telegramrepeat_10m_wasmachine'
  alias: 'Telegram callback to repeat wasmachine message in 10 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/10m-wasmachine'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 10 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:10:00'
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: De wasmachine is klaar.
      inline_keyboard: '10 min:/10m-wasmachine, 30 min:/30m-wasmachine, 3 uur:/3h-wasmachine, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_30m_wasmachine'
  alias: 'Telegram callback to repeat wasmachine message in 30 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/30m-wasmachine'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 30 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '00:30:00'
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: De wasmachine is klaar.
      inline_keyboard: '10 min:/10m-wasmachine, 30 min:/30m-wasmachine, 3 uur:/3h-wasmachine, Geen herinnering:/removekeyboard'
- id: 'telegramrepeat_3h_wasmachine'
  alias: 'Telegram callback to repeat wasmachine message in 3 hours'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/3h-wasmachine'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 3 uren er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: [] 
  - delay: '03:00:00'
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: De wasmachine is klaar.
      inline_keyboard: '10 min:/10m-wasmachine, 30 min:/30m-wasmachine, 3 uur:/3h-wasmachine, Geen herinnering:/removekeyboard'
- id: '1568903418336'
  alias: Motion Heating On Kamer Lars
  trigger:
  - entity_id: binary_sensor.presence_kamer_lars
    for: 00:03:00
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "09:00" and states.sensor.time.state
      < "18:00"}}'
  action:
  - data:
      entity_id: climate.thermostaat_kamer_lars
      temperature: 21
    service: climate.set_temperature
  - service: script.janet_speech_engine_lars
    data:
      call_heating_lars: 1
- id: '1568904307622'
  alias: Motion Heating Off Kamer Lars
  trigger:
  - entity_id: binary_sensor.presence_kamer_lars
    for: '{{(states.input_number.condition_motion_heating_off_kamer_lars_minutes.state
      | int * 60) | timestamp_custom("%H:%M:%S", false) }}'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: climate.thermostaat_kamer_lars
      temperature: 12
    service: climate.set_temperature
- id: 1568903sfsdf36
  alias: Motion Heating On Kamer Nienke
  trigger:
  - entity_id: binary_sensor.presence_kamer_nienke
    for: 00:03:00
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "09:00" and states.sensor.time.state
      < "18:00"}}'
  action:
  - data:
      entity_id: climate.thermostaat_kamer_nienke
      temperature: 21
    service: climate.set_temperature
- id: '1568534534507622'
  alias: Motion Heating Off Kamer Nienke
  trigger:
  - entity_id: binary_sensor.presence_kamer_nienke
    for: '{{(states.input_number.condition_motion_heating_off_kamer_nienke_minutes.state
      | int * 60) | timestamp_custom("%H:%M:%S", false) }}'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: climate.thermostaat_kamer_nienke
      temperature: 12
    service: climate.set_temperature
- id: '1568903534534536'
  alias: Motion Heating On Badkamer
  trigger:
  - entity_id: binary_sensor.presence_badkamer
    for: 00:02:00
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "06:10" and states.sensor.time.state
      < "17:30"}}'
  action:
  - data:
      entity_id: climate.thermostat_badkamer
      temperature: 21
    service: climate.set_temperature
- id: '1568903756757536'
  alias: Timer Heating On Badkamer
  trigger:
  - at: 06:10
    platform: time
  condition: []
  action:
  - data:
      entity_id: climate.thermostat_badkamer
      temperature: 21
    service: climate.set_temperature
- id: '1568534534622'
  alias: Motion Heating Off Badkamer
  trigger:
  - entity_id: binary_sensor.presence_badkamer
    for: '{{(states.input_number.condition_motion_heating_off_badkamer_minutes.state
      | int * 60) | timestamp_custom("%H:%M:%S", false) }}'
    platform: state
    to: 'off'
  condition:
  - condition: template
    value_template: '{{states.climate.thermostat_badkamer.attributes.temperature |
      float > 12}}'
  - condition: template
    value_template: '{% set last_triggered = states.automation.switch_woonkamerdeur_badkamer_verwarmen_ivm_in_bad_gaan.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 60 | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.timer_heating_on_badkamer.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 90 | int}}

      '
  action:
  - data:
      entity_id: climate.thermostat_badkamer
      temperature: 12
    service: climate.set_temperature
- id: '156896456456536'
  alias: Motion Heating On Chillkamer
  trigger:
  - entity_id: binary_sensor.presence_chillkamer
    for: 00:03:00
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "09:00" and states.sensor.time.state
      < "17:30"}}'
  action:
  - data:
      entity_id: climate.thermostaat_chillkamer
      temperature: 21
    service: climate.set_temperature
- id: '156864564622'
  alias: Motion Heating Off Chillkamer
  trigger:
  - entity_id: binary_sensor.presence_chillkamer
    for: '{{(states.input_number.condition_motion_heating_off_chillkamer_minutes.state
      | int * 60) | timestamp_custom("%H:%M:%S", false) }}'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: climate.thermostaat_chillkamer
      temperature: 12
    service: climate.set_temperature
- id: '1568979516019'
  alias: Alarm House Arm bij vertrek
  trigger:
  - platform: template
    value_template: '{{ states.person.martijn.state != "home" and states.person.suzanne.state != "home" }}'
  condition:
  - condition: template
    value_template: '{{ states.input_select.house_mode.state != "Kids Home Alone"
      and states.input_select.house_mode.state != "Guests"}}'
  action:
  - service: alarm_control_panel.alarm_arm_away
    entity_id: alarm_control_panel.home_alarm
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Away
- id: '156897322321319'
  alias: Alarm House Disarm bij thuiskomst
  trigger:
  - platform: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  condition: []
  action:
  - data:
      entity_id: alarm_control_panel.home_alarm
      code: 1234
    service: alarm_control_panel.alarm_disarm
  - data_template:
      option: '{% if states.timer.guests_timer.state != "idle" -%} Guests {%- elif
        states.timer.extended_away_timer.state != "idle" -%} Extended Away {%- elif
        states.timer.kids_home_alone_timer.state != "idle" -%} Kids Home Alone {%-
        else -%} Home {%- endif %}'
      entity_id: input_select.house_mode
    service: input_select.select_option
- id: '1569219751396'
  alias: Alarm House Deur open bij arm away
  trigger:
  - entity_id: binary_sensor.deur_balkon_kamer_nienke
    platform: state
    to: 'on'
  - entity_id: binary_sensor.deur_slaapkamer_balkon
    platform: state
    to: 'on'
  - entity_id: binary_sensor.eetkamerdeur
    platform: state
    to: 'on'
  - entity_id: binary_sensor.garagedeur
    platform: state
    to: 'on'
  - entity_id: binary_sensor.garagedeur_tuinkant
    platform: state
    to: 'on'
  - entity_id: binary_sensor.voordeur
    platform: state
    to: 'on'
  - entity_id: binary_sensor.woonkamerdeur
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_alarm_siren.state
      | int}} '
  action:
  - service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.home_alarm
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: ALARM. Het alarm is getriggered doordat een deur is geopend. Er is 1 minuut om het alarm te deactiveren.
      inline_keyboard: 'Sirene Aan:/siren-on-deur-open, Alarm Uit:/alarm-off, Doe Niets:/removekeyboard'
- id: 'telegram_siren-on_deur_open_nacht'
  alias: 'Telegram callback to switch on the siren when it was triggered due to door opening'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/siren-on-deur-open'
  action:
  - data:
      entity_id:
      - switch.warning_device_garage
    service: switch.turn_on
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: Sirene aangezet doordat een deur is geopend.
      inline_keyboard: 'Laat Sirene Aan:/siren-on-deur-open, Alarm Uit:/alarm-off, Doe Niets:/removekeyboard'
- id: '156942534534396'
  alias: Alarm House Beweging bij arm away
  trigger:
  - entity_id: binary_sensor.presence_garage
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_balkon
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_keuken
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_woonkamer
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_badkamer
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_chillkamer
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_hal_boven
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_kamer_lars
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_kamer_nienke
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_zolder
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_alarm_siren.state
      | int}} '
  action:
  - service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.home_alarm
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: ALARM. Het alarm is getriggered doordat er beweging is gedetecteerd. Er is 1 minuut om het alarm te deactiveren.
      inline_keyboard: 'Sirene Aan:/siren-on-movement, Alarm Uit:/alarm-off, Doe Niets:/removekeyboard'
- id: 'telegram_siren-on_Beweging'
  alias: 'Telegram callback to switch on the siren when it was triggered due to movement'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/siren-on-movement'
  action:
  - data:
      entity_id:
      - switch.warning_device_garage
    service: switch.turn_on
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: Sirene aangezet doordat er beweging is gedetecteerd.
      inline_keyboard: 'Laat Sirene Aan:/siren-on-movement, Alarm Uit:/alarm-off, Doe Niets:/removekeyboard'
- id: 15694tertet4396
  alias: Alarm House Beweging bij arm home
  trigger:
  - entity_id: binary_sensor.presence_garage
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_balkon
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_keuken
    platform: state
    to: 'on'
  - entity_id: binary_sensor.presence_woonkamer
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_home
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_alarm_siren.state
      | int}}'
  action:
  - service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.home_alarm
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: ALARM. Het alarm is getriggered doordat er beweging is gedetecteerd. Er is 1 minuut om het alarm te deactiveren.
      inline_keyboard: 'Sirene Aan:/siren-on-movement-arm-home, Alarm Uit:/alarm-off, Doe Niets:/removekeyboard'
- id: 'telegram_siren-on_Beweging-arm-home'
  alias: 'Telegram callback to switch on the siren when it was triggered due to movement arm home'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/siren-on-movement-arm-home'
  action:
  - data:
      entity_id:
      - switch.warning_device_garage
    service: switch.turn_on
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: Sirene aangezet doordat er beweging is gedetecteerd.
      inline_keyboard: 'Laat Sirene Aan:/siren-on-movement-arm-home, Alarm Uit:/alarm-off, Doe Niets:/removekeyboard'
- id: 15689fsdfsdfsd19
  alias: Alarm House Send notification when alarm triggered
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: triggered
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: ALARM. Het is getriggered door beweging of het openen van een deur. ALARM.
- id: 15689f534535dfsd19
  alias: Alarm House Send notification when alarm is Disarmed
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: disarmed
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      CustomMessage: Het alarm is uitgeschakeld om {{ states('sensor.date_time') }}.
      text_only: 1
- id: 15689fsgsdfgsdf19
  alias: Alarm House Send notification when alarm is Armed in Away mode
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_away
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      CustomMessage: Het alarm is aangezet in de niet thuis modus om {{ states('sensor.date_time') }}.
      text_only: 1
- id: 15689fsdgsdfgsdf9
  alias: Alarm House Send notification when alarm is Armed in Home mode
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_home
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      CustomMessage: Het alarm is aangezet in de thuis modus om {{ states("sensor.date_time") }}.
      text_only: 1
- id: '1569223228774'
  alias: Alarm House Disarm Alarm met dubbel click
  trigger:
  - platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_eetkamer
      event: 1004
  - platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_woonkamer
      event: 1004
  - platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_garage
      event: 1004
  condition: []
  action:
  - data:
      entity_id: alarm_control_panel.home_alarm
      code: 1234
    service: alarm_control_panel.alarm_disarm
  - data_template:
      option: '{% if states.timer.guests_timer.state != "idle" -%} Guests {%- elif
        states.timer.extended_away_timer.state != "idle" -%} Extended Away {%- elif
        states.timer.kids_home_alone_timer.state != "idle" -%} Kids Home Alone {%-
        else -%} Home {%- endif %}'
      entity_id: input_select.house_mode
    service: input_select.select_option
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_alarm_uit: 1
- id: 15674fsdfsddfgd9
  alias: Alarm House Disarm Alarm in de ochtend
  trigger:
  - at: '6:00:00'
    platform: time
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" or states.input_boolean.guest.state == "on" }}'
  action:
  - data:
      entity_id: alarm_control_panel.home_alarm
      code: 1234
    service: alarm_control_panel.alarm_disarm
  - data_template:
      option: '{% if states.timer.guests_timer.state != "idle" -%} Guests {%- elif
        states.timer.extended_away_timer.state != "idle" -%} Extended Away {%- elif
        states.timer.kids_home_alone_timer.state != "idle" -%} Kids Home Alone {%-
        else -%} Home {%- endif %}'
      entity_id: input_select.house_mode
    service: input_select.select_option
- id: 1568fsdfsdfsfd9
  alias: Alarm House Start Siren to sound the alarm
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: triggered
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: Dit is nu nog een waarschuwing, in het vervolg is dit het moment waarop de sirene zal afgaan. Dus volgende keer sneller het alarm deactiveren.
- id: '15653453453046'
  alias: Notification ijskrabben google home
  trigger:
  - at: 07:50:00
    platform: time
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "06:30" and states.sensor.time.state
      < "08:15"}}'
  - condition: template
    value_template: '{{states.binary_sensor.workday_sensor.state == "on"}}'
  - condition: template
    value_template: '{{states.sensor.br_ground_temperature.state | float < -0.5}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      CustomMessage: Goedemorgen. Waarschijnlijk moet je zo krabbben, want het vriest op het moment aan de grond.
- id: '1569228681431'
  alias: Alert Other Empty Batteries
  trigger:
  - platform: template
    value_template: '{{states.sensor.bew_badkamer_battery.state | int < 50}}'
  condition:
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  action:
  - data:
      message: Er is een batterij bijna leeg
      title: Batterij bijna leeg
    service: notify.pushbullet
  - service: tts.google_translate_say
    data_template:
      message: Er is een batterij bijna leeg
      language: nl
    entity_id: group.google_home_group
- id: 156gdfgdfgd31
  alias: Status Langdurig vertrek
  trigger:
  - platform: template
    value_template: '{{ states.person.martijn.state != "home" and states.person.suzanne.state != "home" }}'
    for:
      hours: 24
  action:
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Extended Away
- id: 157079fsdfsdf541
  alias: Notification Send notification when Suzanne is coming home from work
  description: ''
  trigger:
  - entity_id: person.suzanne
    from: Werk Suzanne ETL
    platform: state
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state
      < "18:15"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_persoon_vertrokken: 1
      person: Suzanne
- id: 15707432423f541
  alias: Notification Send notification when Suzanne is coming home from work Auto
    2
  description: ''
  trigger:
  - entity_id: person.suzanne
    from: Suzanne Etten-Leur Auto Meetpunt
    platform: state
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state
      < "18:15"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_persoon_vertrokken_auto: 1
      person: Suzanne
- id: 157079fs535353541
  alias: Notification Send notification when Suzanne is coming home from work Fiets
  description: ''
  trigger:
  - entity_id: person.suzanne
    from: Werk Suzanne ETL
    platform: state
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state
      < "18:15"}}'
  - condition: template
    value_template: '{{ states.device_tracker.life360_suzanne_schelhaas.attributes.speed
      | int > 1 and states.device_tracker.life360_suzanne_schelhaas.attributes.speed
      | int < 30 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_persoon_vertrokken_fiets: 1
      person: Suzanne
- id: 157079fs535353541
  alias: Notification Send notification when Suzanne is coming home from work Fiets
    2
  description: ''
  trigger:
  - entity_id: person.suzanne
    from: Suzanne Etten-Leur Fiets Meetpunt
    platform: state
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state
      < "18:15"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_persoon_vertrokken_fiets2: 1
      person: Suzanne
- id: 1570fsdfsdfsf541
  alias: Notification Send notification when Martijn is coming home from work
  description: ''
  trigger:
  - entity_id: person.martijn
    from: Werk Martijn
    platform: state
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state
      < "18:45"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_persoon_vertrokken: 1
      person: Martijn
- id: 157568587sf541
  alias: Notification Send notification when Martijn is coming home from work Auto
    2
  description: ''
  trigger:
  - entity_id: person.martijn
    from: Martijn Etten-Leur Auto Meetpunt
    platform: state
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state
      < "18:45"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_persoon_vertrokken_auto: 1
      person: Martijn
- id: 157079ffsdfsdsfs3541
  alias: Notification Send notification when Martijn is coming home from work Fiets
  description: ''
  trigger:
  - entity_id: person.martijn
    from: Werk Martijn
    platform: state
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state
      < "18:15"}}'
  - condition: template
    value_template: '{{ states.device_tracker.life360_martijn_van_der_schoot.attributes.speed
      | int > 1 and states.device_tracker.life360_martijn_van_der_schoot.attributes.speed
      | int < 30 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_persoon_vertrokken_fiets: 1
      person: Martijn
- id: 157079ff423423541
  alias: Notification Send notification when Martijn is coming home from work Fiets
    2
  description: ''
  trigger:
  - entity_id: person.martijn
    from: Martijn Hoeven Fiets Meetpunt
    platform: state
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state
      < "18:15"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_persoon_vertrokken_fiets2: 1
      person: Martijn
- id: 157079fsd3242f541
  alias: Notification Send notification when Suzanne is near ALDI
  description: ''
  trigger:
  - entity_id: person.suzanne
    platform: state
    to: Aldi Zevenbergen
  condition:
  - condition: template
    value_template: '{{states.sensor.suzanne_gps_accuracy.state | int < 100 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_persoon_vlakbij_winkel: 1
      person: Suzanne
      shop: ALDI Zevenbergen
  - service: notify.pushbullet
    data_template:
      message: Suzanne is vlakbij de ALDI Zevenbergen, moet ze nog iets meenemen.
        Dit is het lijstje {{states.sensor.shopping_list_supermarkt_d36c380686.attributes.notes[0].unchecked}}
- id: 157079fsd3242f541211
  alias: Notification Send notification when Martijn is near ALDI
  description: ''
  trigger:
  - entity_id: person.martijn
    platform: state
    to: Aldi Zevenbergen
  condition:
  - condition: template
    value_template: '{{states.sensor.martijn_gps_accuracy.state | int < 100 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_persoon_vlakbij_winkel: 1
      person: Martijn
      shop: ALDI Zevenbergen
  - service: notify.pushbullet_suzanne
    data_template:
      message: Martijn is vlakbij de ALDI Zevenbergen, moet hij nog iets meenemen.
        Dit is het lijstje {{states.sensor.shopping_list_supermarkt_d36c380686.attributes.notes[0].unchecked}}
- id: 157079fsdfsdfsf541
  alias: Notification Send notification when Suzanne is near AH
  description: ''
  trigger:
  - entity_id: person.suzanne
    platform: state
    to: AH Zevenbergen
  condition:
  - condition: template
    value_template: '{{states.sensor.suzanne_gps_accuracy.state | int < 100 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_persoon_vlakbij_winkel: 1
      person: Suzanne
      shop: Albert Heijn Zevenbergen
  - service: notify.pushbullet
    data_template:
      message: Suzanne is vlakbij de Albert Heijn Zevenbergen, moet ze nog iets meenemen.
        Dit is het lijstje {{states.sensor.shopping_list_supermarkt_d36c380686.attributes.notes[0].unchecked}}
- id: 157079ffsdfsd41211
  alias: Notification Send notification when Martijn is near AH
  description: ''
  trigger:
  - entity_id: person.martijn
    platform: state
    to: AH Zevenbergen
  condition:
  - condition: template
    value_template: '{{states.sensor.martijn_gps_accuracy.state | int < 100 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_persoon_vlakbij_winkel: 1
      person: Martijn
      shop: Albert Heijn Zevenbergen
  - service: notify.pushbullet_suzanne
    data_template:
      message: Martijn is vlakbij de Albert Heijn Zevenbergen, moet hij nog iets meenemen.
        Dit is het lijstje {{states.sensor.shopping_list_supermarkt_d36c380686.attributes.notes[0].unchecked}}
- id: 157079fsdfsdf
  alias: Notification Send notification when Suzanne is near Action
  description: ''
  trigger:
  - entity_id: person.suzanne
    platform: state
    to: Action Zevenbergen
  condition:
  - condition: template
    value_template: '{{states.sensor.suzanne_gps_accuracy.state | int < 100 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_persoon_vlakbij_winkel: 1
      person: Suzanne
      shop: Action Zevenbergen
  - service: notify.pushbullet
    data_template:
      message: Suzanne is vlakbij de Action Zevenbergen, moet ze nog iets meenemen.
        Dit is het lijstje {{states.sensor.shopping_list_action_49d2513274.attributes.notes[0].unchecked}}
      title: Suzanne vlakbij de Action Zevenbergen
- id: 15707fsdfsdfs41211
  alias: Notification Send notification when Martijn is near Action
  description: ''
  trigger:
  - entity_id: person.martijn
    platform: state
    to: Action Zevenbergen
  condition:
  - condition: template
    value_template: '{{states.sensor.martijn_gps_accuracy.state | int < 100 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_persoon_vlakbij_winkel: 1
      person: Martijn
      shop: Action Zevenbergen
  - service: notify.pushbullet_suzanne
    data_template:
      message: Martijn is vlakbij de Action Zevenbergen, moet hij nog iets meenemen.
        Dit is het lijstje {{states.sensor.shopping_list_action_49d2513274.attributes.notes[0].unchecked}}
- id: 1570fsdfsdfsdfsdf
  alias: Notification Send notification when Suzanne is near Hornbach Breda
  description: ''
  trigger:
  - entity_id: person.suzanne
    platform: state
    to: Hornbach Breda
  condition:
  - condition: template
    value_template: '{{states.sensor.suzanne_gps_accuracy.state | int < 100 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_persoon_vlakbij_winkel: 1
      person: Suzanne
      shop: Hornbach Breda
  - service: notify.pushbullet
    data_template:
      message: Suzanne is vlakbij de Hornbach Breda, moet ze nog iets meenemen. Dit
        is het lijstje {{states.sensor.shopping_list_bouwmarkt_70153b53fd.attributes.notes[0].unchecked}}
- id: 15707ffsdfsdfsd11
  alias: Notification Send notification when Martijn is near Hornbach Breda
  description: ''
  trigger:
  - entity_id: person.martijn
    platform: state
    to: Hornbach Breda
  condition:
  - condition: template
    value_template: '{{states.sensor.martijn_gps_accuracy.state | int < 100 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_persoon_vlakbij_winkel: 1
      person: Martijn
      shop: Hornbach Breda
  - service: notify.pushbullet_suzanne
    data_template:
      message: Martijn is vlakbij de Hornbach Breda, moet hij nog iets meenemen. Dit
        is het lijstje {{states.sensor.shopping_list_bouwmarkt_70153b53fd.attributes.notes[0].unchecked}}
- id: 1570fsdfsdfsdfsdf
  alias: Notification Send notification when Suzanne is near IKEA Breda
  description: ''
  trigger:
  - entity_id: person.suzanne
    platform: state
    to: IKEA Breda
  condition:
  - condition: template
    value_template: '{{states.sensor.suzanne_gps_accuracy.state | int < 100 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_persoon_vlakbij_winkel: 1
      person: Suzanne
      shop: IKEA Breda
  - service: notify.pushbullet
    data_template:
      message: Suzanne is vlakbij de IKEA Breda, moet ze nog iets meenemen. Dit is
        het lijstje {{states.sensor.shopping_list_ikea_fcb8bfc6a3.attributes.notes[0].unchecked}}
- id: 15707ffsdfsdfsd11
  alias: Notification Send notification when Martijn is near IKEA Breda
  description: ''
  trigger:
  - entity_id: person.martijn
    platform: state
    to: IKEA Breda
  condition:
  - condition: template
    value_template: '{{states.sensor.martijn_gps_accuracy.state | int < 100 }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_persoon_vlakbij_winkel: 1
      person: Martijn
      shop: IKEA Breda
  - service: notify.pushbullet_suzanne
    data_template:
      message: Martijn is vlakbij de IKEA Breda, moet hij nog iets meenemen. Dit is
        het lijstje {{states.sensor.shopping_list_ikea_fcb8bfc6a3.attributes.notes[0].unchecked}}
- id: '156453645645674'
  alias: Notification Humidity woonkamer
  trigger:
  - platform: template
    value_template: '{{states.sensor.hum_keuken.state | int > 70}}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_hum_check: 1
      kamer: woonkamer
- id: 1564536gdfgd74
  alias: Notification Humidity kamer lars
  trigger:
  - platform: template
    value_template: '{{states.sensor.hum_kamer_lars.state | int > 73}}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_hum_check: 1
      kamer: kamer_lars
      text_only: 1
- id: 156453fgdgd74
  alias: Notification Humidity kamer nienke
  trigger:
  - platform: template
    value_template: '{{states.sensor.hum_kamer_nienke.state | int > 73}}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_hum_check: 1
      kamer: kamer_nienke
      text_only: 1
- id: '15634543463474'
  alias: Notification Humidity bijkeuken
  trigger:
  - platform: template
    value_template: '{{states.sensor.hum_bijkeuken.state | int > 95}}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_hum_check: 1
      kamer: bijkeuken
      text_only: 1
- id: 156442gdfgdf34274'
  alias: Notification Hoog Gasverbruik
  trigger:
  - platform: template
    value_template: '{{states.sensor.toon_gas_used_last_hour.state | float > 1.4}}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_verbruik_gas: 1
  - service: notify.woonkamerandroidtv
    data:
      message: Er is het afgelopen uur veel gas verbruik gemeten, namelijk {{(states.sensor.toon_gas_used_last_hour.state
        | float *1000 ) |int }} kubieke meter
      title: Hoog Gasverbruik
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: '15644234234274'
  alias: Notification Hoog Electriciteitsverbruik
  trigger:
  - platform: template
    value_template: '{{states.sensor.toon_p1_power_use.state | int > 5750}}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Guests"}}'
  - condition: template
    value_template: '{{states.input_select.house_mode.state != "Night"}}'
  - condition: template
    value_template: '{% set last_triggered = states.automation.notification_hoog_electriciteitsverbruik.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 5 | int}}

      '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_verbruik_elec: 1
  - service: notify.woonkamerandroidtv
    data:
      message: Er wordt op het moment veel stroom verbruik gemeten, namelijk
        {{states.sensor.toon_p1_power_use.state | int}} W
      title: Hoog Electriciteitsverbruik
      data:
        fontsize: large
        duration: 5
        position: center
        interrupt: 0
- id: 156442hfdgfdg274
  alias: Notification Hoge Temperatuur woonkamer 1
  trigger:
  - platform: template
    value_template: '{{states.sensor.toon_room_temp.state | float > 25 }}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_temp_check: 1
      kamer: woonkamer
- id: 156442hfdgfdg275a
  alias: Notification Lage Temperatuur garage
  trigger:
  - platform: template
    value_template: '{{states.sensor.temp_garage.state | float < 0 }}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_temp_check: 1
      kamer: garage
- id: 156442h42342fdg275a
  alias: Notification Lage Temperatuur bijkeuken
  trigger:
  - platform: template
    value_template: '{{states.sensor.temp_bijkeuken.state | float < 0 }}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_temp_check: 1
      kamer: bijkeuken
- id: 156442h423gdfgd275a
  alias: Notification Lage Temperatuur buiten
  trigger:
  - platform: template
    value_template: '{{states.sensor.br_temperature.state | float < -8 }}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_temp_check: 1
      kamer: buiten
- id: 156442h4sdfsdfs
  alias: Notification Temperatuur stijging woonkamer
  trigger:
  - platform: template
    value_template: '{{states.sensor.temp_keuken.state | float - states.sensor.keuken_temperature_stats.state
      | float > 3 }}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_temp_delta_check: 1
      kamer: woonkamer
      text_only: 1
- id: 156445hfdhfgfs
  alias: Notification Temperatuur stijging kamer Lars
  trigger:
  - platform: template
    value_template: '{{states.sensor.temp_kamer_lars.state | float - states.sensor.temperatuur_kamer_lars_stats.state
      | float > 3 }}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_temp_delta_check: 1
      kamer: kamer_lars
      text_only: 1
- id: 156445hhhhhhhhhg
  alias: Notification Temperatuur stijging kamer Nienke
  trigger:
  - platform: template
    value_template: '{{states.sensor.temp_kamer_nienke.state | float - states.sensor.temperatuur_kamer_nienke_stats.state
      | float > 3 }}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_temp_delta_check: 1
      kamer: kamer_nienke
      text_only: 1
- id: 1564fdgdffghhhg
  alias: Notification Temperatuur stijging zolder
  trigger:
  - platform: template
    value_template: '{{states.sensor.temp_zolder.state | float - states.sensor.temperatuur_zolder_stats.state
      | float > 3 }}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_temp_delta_check: 1
      kamer: zolder
      text_only: 1
- id: 1564fdgdffghhhg
  alias: Notification Temperatuur stijging badkamer
  trigger:
  - platform: template
    value_template: '{{states.sensor.hum_temp_bad_temperature.state | float - states.sensor.temperatuur_bad_stats.state
      | float > 3 }}'
  condition:
  - condition: template
    value_template: '{{states.sensor.time_online.state | int > states.input_number.condition_time_online_minutes_for_notifications.state
      | int}} '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_temp_delta_check: 1
      kamer: badkamer
      text_only: 1
- id: sonoff1
  alias: Miscellaneous Power state on HA start-up
  trigger:
    platform: homeassistant
    event: start
  action:
  - service: mqtt.publish
    data:
      topic: sonoffs/cmnd/state
      payload: ''
- id: sonoff2
  alias: Miscellaneous Enable MQTT discovery for all devices
  trigger:
    platform: homeassistant
    event: start
  action:
  - service: mqtt.publish
    data:
      topic: cmnd/sonoffs/SetOption19
      payload: '1'
- id: Timer Cooking timer done
  alias: Timer Cooking timer done
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.cooking_timer
  action:
  - service: persistent_notification.create
    data:
      title: Timer DONE
      message: THE TIME IS DONE!
- id: Timer Guest timer started
  alias: Timer Guest timer started
  trigger:
  - event_data:
      entity_id: timer.guests_timer
    event_type: timer.started
    platform: event
  action:
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Guests
- id: Timer Guest timer done
  alias: Timer Guest timer done
  trigger:
  - event_data:
      entity_id: timer.guests_timer
    event_type: timer.finished
    platform: event
  action:
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Home
- id: Timer Kids Home Alone timer started
  alias: Timer Kids Home Alone timer started
  trigger:
  - event_data:
      entity_id: timer.kids_home_alone_timer
    event_type: timer.started
    platform: event
  action:
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Kids Home Alone
- id: Timer Kids Home Alone timer done
  alias: Timer Kids Home Alone timer done
  trigger:
  - event_data:
      entity_id: timer.kids_home_alone_timer
    event_type: timer.finished
    platform: event
  action:
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Home
- id: Timer Extended Away timer started
  alias: Timer Extended Away timer started
  trigger:
  - event_data:
      entity_id: timer.extended_away_timer
    event_type: timer.started
    platform: event
  action:
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Extended Away
- id: Timer Extended Away timer done
  alias: Timer Extended Away timer done
  trigger:
  - event_data:
      entity_id: timer.extended_away_timer
    event_type: timer.finished
    platform: event
  action:
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Home
- id: Automation ran
  alias: Miscellaneous Automation ran
  trigger:
    platform: event
    event_type: state_changed
  condition:
  - condition: template
    value_template: "{% set skip_list = ['miscellaneous_automation_ran', 'miscellaneous_automation_ran_2',\
      \ 'miscellaneous_automation_ran_3',\n                     'miscellaneous_automation_ran_4',\
      \ 'miscellaneous_automation_ran_5',\n                     'miscellaneous_automation_ran_6']\
      \ %}\n{{ trigger.event.data.entity_id.startswith('automation.') and\n   trigger.event.data.entity_id.split('.')[1]\
      \ not in skip_list and\n   'old_state' in trigger.event.data and 'new_state'\
      \ in trigger.event.data }}\n"
  - condition: template
    value_template: '{% set last_triggered = states.automation.miscellaneous_automation_ran.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int ) > 30}}'
  action:
  - condition: template
    value_template: "{{ trigger.event.data.new_state.attributes.last_triggered !=\n\
      \   trigger.event.data.old_state.attributes.last_triggered }}\n"
  - service: notify.filed_automations
    data_template:
      message: '{{ as_timestamp(trigger.event.data.new_state.last_updated)|timestamp_custom(''%d
        %b: %X'') }}: {{ trigger.event.data.new_state.name }}

        '
  - service: python_script.last_automation
    data_template:
      event: '{{ trigger.event }}'
  - service: input_text.set_value
    data_template:
      entity_id: input_text.last_automation5
      value: "{{ states.input_text.last_automation4.state }}"
  - service: input_text.set_value
    data_template:
      entity_id: input_text.last_automation4
      value: "{{ states.input_text.last_automation3.state }}"
  - service: input_text.set_value
    data_template:
      entity_id: input_text.last_automation3
      value: "{{ states.input_text.last_automation2.state }}"
  - service: input_text.set_value
    data_template:
      entity_id: input_text.last_automation2
      value: "{{ states.input_text.last_automation1.state }}"
  - service: input_text.set_value
    data_template:
      entity_id: input_text.last_automation1
      value: "{{ states.sensor.last_automation.state }}"
- id: '1564553453534'
  alias: Notification Alarm 1 Google Home
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.alarm1.state[0:5]}}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" }}'
  - condition: state
    entity_id: input_boolean.all_alarms
    state: 'on'
  - condition: state
    entity_id: binary_sensor.schoolvakantiedag
    state: 'off'
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Mon") and (states.input_boolean.alarm1_mo.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Tue") and (states.input_boolean.alarm1_tu.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Wed") and (states.input_boolean.alarm1_we.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Thu") and (states.input_boolean.alarm1_th.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Fri") and (states.input_boolean.alarm1_fr.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Sat") and (states.input_boolean.alarm1_sa.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Sun") and (states.input_boolean.alarm1_su.state=="on")}}'
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.janet_text_notifications
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 2
      voor_of_na: voor
      alarm_nr: 1
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 1
      voor_of_na: voor
      alarm_nr: 1
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 0
      voor_of_na: voor
      alarm_nr: 1
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 1
      voor_of_na: na
      alarm_nr: 1
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 2
      voor_of_na: na
      alarm_nr: 1
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 3
      voor_of_na: na
      alarm_nr: 1
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.janet_text_notifications
- id: '156455345345334'
  alias: Notification Alarm 2 Google Home
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.alarm2.state[0:5]}}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" }}'
  - condition: state
    entity_id: input_boolean.all_alarms
    state: 'on'
  - condition: state
    entity_id: binary_sensor.schoolvakantiedag
    state: 'off'
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Mon") and (states.input_boolean.alarm2_mo.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Tue") and (states.input_boolean.alarm2_tu.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Wed") and (states.input_boolean.alarm2_we.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Thu") and (states.input_boolean.alarm2_th.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Fri") and (states.input_boolean.alarm2_fr.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Sat") and (states.input_boolean.alarm2_sa.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Sun") and (states.input_boolean.alarm2_su.state=="on")}}'
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.janet_text_notifications
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 2
      voor_of_na: voor
      alarm_nr: 2
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 1
      voor_of_na: voor
      alarm_nr: 2
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 0
      voor_of_na: voor
      alarm_nr: 2
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 1
      voor_of_na: na
      alarm_nr: 2
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 2
      voor_of_na: na
      alarm_nr: 2
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 3
      voor_of_na: na
      alarm_nr: 2
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.janet_text_notifications
- id: '2564555345344'
  alias: Notification Alarm 3 Google Home
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.alarm3.state[0:5]}}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" }}'
  - condition: state
    entity_id: input_boolean.all_alarms
    state: 'on'
  - condition: state
    entity_id: binary_sensor.schoolvakantiedag
    state: 'off'
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Mon") and (states.input_boolean.alarm3_mo.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Tue") and (states.input_boolean.alarm3_tu.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Wed") and (states.input_boolean.alarm3_we.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Thu") and (states.input_boolean.alarm3_th.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Fri") and (states.input_boolean.alarm3_fr.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Sat") and (states.input_boolean.alarm3_sa.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Sun") and (states.input_boolean.alarm3_su.state=="on")}}'
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.janet_text_notifications
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 2
      voor_of_na: voor
      alarm_nr: 3
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 1
      voor_of_na: voor
      alarm_nr: 3
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 0
      voor_of_na: voor
      alarm_nr: 3
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 1
      voor_of_na: na
      alarm_nr: 3
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 2
      voor_of_na: na
      alarm_nr: 3
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 3
      voor_of_na: na
      alarm_nr: 3
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.janet_text_notifications
- id: '456455345345334'
  alias: Notification Alarm 4 Google Home
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.alarm4.state[0:5]}}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" }}'
  - condition: state
    entity_id: input_boolean.all_alarms
    state: 'on'
  - condition: state
    entity_id: binary_sensor.schoolvakantiedag
    state: 'off'
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Mon") and (states.input_boolean.alarm4_mo.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Tue") and (states.input_boolean.alarm4_tu.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Wed") and (states.input_boolean.alarm4_we.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Thu") and (states.input_boolean.alarm4_th.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Fri") and (states.input_boolean.alarm4_fr.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Sat") and (states.input_boolean.alarm4_sa.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Sun") and (states.input_boolean.alarm4_su.state=="on")}}'
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.janet_text_notifications
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 2
      voor_of_na: voor
      alarm_nr: 4
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 1
      voor_of_na: voor
      alarm_nr: 4
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 0
      voor_of_na: voor
      alarm_nr: 4
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 1
      voor_of_na: na
      alarm_nr: 4
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 2
      voor_of_na: na
      alarm_nr: 4
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 3
      voor_of_na: na
      alarm_nr: 4
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.janet_text_notifications
- id: '556455353453453'
  alias: Notification Alarm 5 Google Home
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.alarm5.state[0:5]}}'
  condition:
  - condition: template
    value_template: '{{ states.person.martijn.state == "home" or states.person.suzanne.state == "home" }}'
  - condition: state
    entity_id: input_boolean.all_alarms
    state: 'on'
  - condition: state
    entity_id: binary_sensor.schoolvakantiedag
    state: 'off'
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Mon") and (states.input_boolean.alarm5_mo.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Tue") and (states.input_boolean.alarm5_tu.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Wed") and (states.input_boolean.alarm5_we.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Thu") and (states.input_boolean.alarm5_th.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Fri") and (states.input_boolean.alarm5_fr.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Sat") and (states.input_boolean.alarm5_sa.state=="on")}}'
    - condition: template
      value_template: '{{ (now().strftime("%a") == "Sun") and (states.input_boolean.alarm5_su.state=="on")}}'
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.janet_text_notifications
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 2
      voor_of_na: voor
      alarm_nr: 5
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 1
      voor_of_na: voor
      alarm_nr: 5
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 0
      voor_of_na: voor
      alarm_nr: 5
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 1
      voor_of_na: na
      alarm_nr: 5
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 2
      voor_of_na: na
      alarm_nr: 5
  - delay: 00:01:00
  - service: script.janet_speech_engine
    data:
      call_alarm_google_home_sentence: 1
      minutes: 3
      voor_of_na: na
      alarm_nr: 5
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.janet_text_notifications
- id: '1572527347324'
  alias: Miscellaneous eco modus on
  description: ''
  trigger:
  - entity_id: input_select.house_mode
    platform: state
    from: Guests
  condition: []
  action:
  - alias: ''
    data:
      entity_id: input_boolean.eco_modus
    service: input_boolean.turn_on
- id: '1572312314'
  alias: Miscellaneous eco modus off
  description: ''
  trigger:
  - entity_id: input_select.house_mode
    platform: state
    to: Guests
  condition: []
  action:
  - alias: ''
    data:
      entity_id: input_boolean.eco_modus
    service: input_boolean.turn_off
- id: 157253gdfgdf324
  alias: Miscellaneous electricity switch
  description: ''
  trigger:
  - platform: time
    at: 07:00:00
  - platform: time
    at: '21:00:00'
  condition: []
  action:
  - service: utility_meter.next_tariff
    entity_id: utility_meter.daily_electricity
  - service: utility_meter.next_tariff
    entity_id: utility_meter.weekly_electricity
  - service: utility_meter.next_tariff
    entity_id: utility_meter.monthly_electricity
  - service: utility_meter.next_tariff
    entity_id: utility_meter.yearly_electricity
- id: '1574070234498'
  alias: Miscellaneous Test camera recorder
  description: ''
  trigger:
  - at: '12:10:00'
    platform: time
  condition: []
  action:
  - service: camera.record
    data:
      entity_id: camera.dafang_camera_1
      filename: /config/www/{{ entity_id }}_{{ now().strftime("%Y%m%d-%H%M%S") }}.mp4
      duration: 1200
- id: 156g54353gd712
  alias: Switch Woonkamerdeur badkamer verwarmen ivm in bad gaan
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_woonkamer
      event: 1005
  condition: []
  action:
  - data:
      entity_id: climate.thermostat_badkamer
      temperature: 21
    service: climate.set_temperature
  - service: climate.set_preset_mode
    data:
      entity_id: climate.toon_thermostat
      preset_mode: comfort
  - entity_id: timer.fan_on_timer
    service: timer.pause
  - delay: 00:00:02
  - data_template:
      duration: '{{ (states.timer.fan_on_timer.attributes.remaining [0:1] | int *
        3600 + states.timer.fan_on_timer.attributes.remaining [2:4] | int * 60 + states.timer.fan_on_timer.attributes.remaining
        [5:7] | int + 60 | int * 60) | timestamp_custom("%H:%M:%S", false) }}'
      entity_id: timer.fan_on_timer
    service: timer.start
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - service: script.janet_speech_engine
    data:
      call_bathing_sentence: 1
- id: '15769768768324'
  alias: Miscellaneous zacht licht on
  description: ''
  trigger:
  - entity_id: input_boolean.zacht_licht
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      brightness: 40
      color_temp: 500
      entity_id:
      - light.aanrecht
      - light.bar
      - light.boventv
      - light.lampen_eetkamertafel
      - light.sonoff_schemerlamp_n_bank
      - light.sonoff_spoelbak_keuken
      - light.lampen_speelkamer
      - light.grote_staande_lamp_bank
      - light.sonoff_sfeerlicht_speelkamer
    service: light.turn_on
  - data_template:
      language: nl
      message: OK, ik heb de lampen beneden op zacht licht gezet
    entity_id: group.google_home_group
    service: tts.google_translate_say
- id: '15769645645624'
  alias: Miscellaneous normaal licht on
  description: ''
  trigger:
  - entity_id: input_boolean.normaal_licht
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      brightness: 125
      color_temp: 500
      entity_id:
      - light.aanrecht
      - light.bar
      - light.boventv
      - light.lampen_eetkamertafel
      - light.sonoff_schemerlamp_n_bank
      - light.sonoff_spoelbak_keuken
      - light.lampen_speelkamer
      - light.grote_staande_lamp_bank
      - light.sonoff_sfeerlicht_speelkamer
    service: light.turn_on
  - data_template:
      language: nl
      message: OK, ik heb de lampen beneden op normaal licht gezet
    entity_id: group.google_home_group
    service: tts.google_translate_say
- id: '1576964534534524'
  alias: Miscellaneous fel licht on
  description: ''
  trigger:
  - entity_id: input_boolean.fel_licht
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      brightness: 255
      color_temp: 500
      entity_id:
      - light.aanrecht
      - light.bar
      - light.boventv
      - light.lampen_eetkamertafel
      - light.sonoff_schemerlamp_n_bank
      - light.sonoff_spoelbak_keuken
      - light.lampen_speelkamer
      - light.grote_staande_lamp_bank
      - light.sonoff_sfeerlicht_speelkamer
    service: light.turn_on
  - data_template:
      language: nl
      message: OK, ik heb de lampen beneden op fel licht gezet
    entity_id: group.google_home_group
    service: tts.google_translate_say
- id: '15769635345345524'
  alias: Miscellaneous upstairs on
  description: ''
  trigger:
  - entity_id: input_boolean.upstairs
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      entity_id:
      - light.lampen_eetkamertafel
      - light.entree
      - light.lampen_hal
      - light.lampen_woonkamer
      - light.lampen_keuken
      - light.lampen_toilet_beneden
      - light.lampen_toilet_boven
    service: light.turn_off
  - data_template:
      language: nl
      message: OK, ik heb de lampen beneden uitgezet. Je kunt naar boven gaan, weltrusten
        alvast
    entity_id: group.google_home_group
    service: tts.google_translate_say
- id: '1576967567567524'
  alias: Miscellaneous sleep on
  description: ''
  trigger:
  - entity_id: input_boolean.sleep
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      entity_id:
      - light.lampen_eetkamertafel
      - light.entree
      - light.lampen_hal
      - light.lampen_woonkamer
      - light.lampen_keuken
      - light.lampen_toilet_beneden
      - light.lampen_toilet_boven
      - light.lampen_hal_boven
      - light.lampen_kamer_lars
      - light.lampen_kamer_nienke
      - light.lampen_slaapkamer
    service: light.turn_off
  - service: alarm_control_panel.alarm_arm_night
    entity_id: alarm_control_panel.home_alarm
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Night
  - data_template:
      language: nl
      message: OK, ik heb alle lampen binnen uitgezet en de beveiliging voor de nacht
        aangezet. Weltrusten
    entity_id: group.google_home_group
    service: tts.google_translate_say
- id: '1576963353524'
  alias: Miscellaneous leave on
  description: ''
  trigger:
  - entity_id: input_boolean.leave
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ states.input_select.house_mode.state != "Kids Home Alone"
      and states.input_select.house_mode.state != "Guests"}}'
  action:
  - service: alarm_control_panel.alarm_arm_away
    entity_id: alarm_control_panel.home_alarm
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Away
  - data_template:
      language: nl
      message: OK, ik heb beveiliging aangezet zodat je veilig kan vertrekken. Tot
        later, dag
    entity_id: group.google_home_group
    service: tts.google_translate_say
- id: '1576953453453524'
  alias: Miscellaneous holiday on
  description: ''
  trigger:
  - entity_id: input_boolean.holiday
    platform: state
    to: 'on'
  condition: []
  action:
  - service: alarm_control_panel.alarm_arm_away
    entity_id: alarm_control_panel.home_alarm
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Extended Away
  - data_template:
      language: nl
      message: OK, ik heb beveiliging aangezet zodat je veilig voor een langere tijd
        kunt vertrekken. Ga je op vakantie? Tot over lange tijd, dag
    entity_id: group.google_home_group
    service: tts.google_translate_say
- id: '1576942423524'
  alias: Miscellaneous guest on
  description: ''
  trigger:
  - entity_id: input_boolean.guest
    platform: state
    to: 'on'
  condition: []
  action:
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Guests
  - data_template:
      language: nl
      message: OK, ik heb de gasten modus aangezet. Welkom gasten. Ik zal alles iets
        comfortabeler maken dan normaal, want met gasten in huis moet het comfort
        natuurlijk maximaal zijn. Hopelijk hebben jullie een aangenaam verblijf
    entity_id: group.google_home_group
    service: tts.google_translate_say
- id: '15769424234224'
  alias: Miscellaneous reset on
  description: ''
  trigger:
  - entity_id: input_boolean.reset
    platform: state
    to: 'on'
  condition: []
  action:
  - service: input_select.select_option
    entity_id: input_select.house_mode
    data:
      option: Home
  - alias: ''
    data:
      entity_id: input_boolean.eco_modus
    service: input_boolean.turn_off
  - data_template:
      language: nl
      message: OK, ik heb een reset uitgevoerd. Het huis staat weer in de Home modus
        en de eco modus is uitgezet
    entity_id: group.google_home_group
    service: tts.google_translate_say
- id: '15643436'
  alias: Notification p2000 in de buurt Martijn pushbullet
  trigger:
  - platform: template
    value_template: '{{ (distance("person.martijn", "sensor.p2000") *1000 | float)
      < 500 }}'
  condition:
  action:
  - data:
      message: Er is een P2000 melding vlakbij Martijn in de buurt, namelijk op {{
        distance('person.martijn', 'sensor.p2000') *1000 | int }} meter afstand. De
        melding is {{states.sensor.p2000.state}}
      title: P2000 melding vlakbij Martijn
    service: notify.pushbullet
  - data:
      message: Er is een P2000 melding vlakbij Martijn in de buurt, namelijk op {{
        distance('person.martijn', 'sensor.p2000') *1000 | int }} meter afstand. De
        melding is {{states.sensor.p2000.state}}
      title: P2000 melding vlakbij Martijn
    service: notify.pushbullet_suzanne
- id: 1564gdfgdgd36
  alias: Notification p2000 in de buurt Suzanne pushbullet
  trigger:
  - platform: template
    value_template: '{{ (distance("person.suzanne", "sensor.p2000") *1000 | float)
      < 500 }}'
  condition:
  action:
  - data:
      message: Er is een P2000 melding vlakbij Suzanne in de buurt, namelijk op {{
        distance('person.suzanne', 'sensor.p2000') *1000 | int }} meter afstand. De
        melding is {{states.sensor.p2000.state}}
      title: P2000 melding vlakbij Suzanne
    service: notify.pushbullet
  - data:
      message: Er is een P2000 melding vlakbij Suzanne in de buurt, namelijk op {{
        distance('person.suzanne', 'sensor.p2000') *1000 | int }} meter afstand. De
        melding is {{states.sensor.p2000.state}}
      title: P2000 melding vlakbij Suzanne
    service: notify.pushbullet_suzanne
- id: 1564gdgdfgdgdd36
  alias: Notification p2000 in de buurt van huis pushbullet
  trigger:
  - platform: template
    value_template: '{{ (distance("zone.home", "sensor.p2000") *1000 | float) < 500
      }}'
  condition:
  action:
  - data:
      message: Er is een P2000 melding vlakbij huis, namelijk op {{ distance('zone.home',
        'sensor.p2000') *1000 | int }} meter afstand. De melding is {{states.sensor.p2000.state}}
      title: P2000 melding vlakbij huis
    service: notify.pushbullet
  - data:
      message: Er is een P2000 melding vlakbij huis, namelijk op {{ distance('zone.home',
        'sensor.p2000') *1000 | int }} meter afstand. De melding is {{states.sensor.p2000.state}}
      title: P2000 melding vlakbij huis
    service: notify.pushbullet_suzanne
- id: 156hfgdhdf7dd36
  alias: Notification AP Tweede Verdieping offline
  trigger:
  - entity_id: sensor.ap_ac_iw_second_floor
    for: 00:10:00
    platform: state
    to: '"offline"'
  condition:
  action:
  - data:
      message: AP Tweede Verdieping is nu al 10 minuten offline
      title: AP Tweede Verdieping offline
    service: notify.pushbullet
- id: 156hf545436
  alias: Notification AP Derde Verdieping offline
  trigger:
  - entity_id: sensor.ap_ac_iw_third_floor
    for: 00:10:00
    platform: state
    to: offline
  condition:
  action:
  - data:
      message: AP Derde Verdieping is nu al 10 minuten offline
      title: AP Derde Verdieping offline
    service: notify.pushbullet
- id: 1hfghfgh4536
  alias: Notification NAS offline
  trigger:
  - entity_id: sensor.nas_schoot
    for: 00:10:00
    platform: state
    to: offline
  condition:
  action:
  - data:
      message: De NAS is nu al 10 minuten offline
      title: NAS offline
    service: notify.pushbullet
- id: 1553hfghfgh36
  alias: Notification NAS smart status
  trigger:
  - entity_id: sensor.nas_schoot_smart_status_drive_0_1
    platform: state
    from: OK
  - entity_id: sensor.nas_schoot_smart_status_drive_0_2
    platform: state
    from: OK
  condition:
  action:
  - data:
      message: Het lijkt erop dat een van de schijven van de NAS aan het degraderen
        is
      title: NAS schijf probleem
    service: notify.pushbullet
- id: 1553hfghfgh6
  alias: Notification NAS disk problem
  trigger:
  - platform: template
    value_template: '{{states.sensor.nas_schoot_volume_used_datavol1.state | int >
      95 | int}}'
  condition:
  action:
  - data:
      message: De schijven van de NAS zijn meer dan 95% vol. Er moet nu echt iets
        aan gedaan worden
      title: NAS schijf vol
    service: notify.pushbullet
- id: 1553hfghfg536
  alias: Notification NAS temp too high
  trigger:
  - platform: template
    value_template: '{{states.sensor.nas_schoot_system_temperature.state | int > 50 | int}}'
  condition:
  action:
  - data:
      message: De NAS temperatuur is hoger dan 50 graden. Dat lijkt me een beetje
        hoog, graag checken
      title: NAS temperatuur hoog
    service: notify.pushbullet
- id: 1553hfsfs6
  alias: Notification NAS memory usage too high
  trigger:
  - platform: template
    value_template: '{{states.sensor.nas_schoot_memory_usage.state | int > 93 | int}}'
  condition:
  action:
  - data:
      message: Het geheugengebruik van de NAS temperatuur is erg hoog, graag checken
      title: NAS geheugengebruik hoog
    service: notify.pushbullet
- id: 1553dasdasfg536
  alias: Notification Unifi Gateway Alerts
  trigger:
  - platform: template
    value_template: '{{states.sensor.unifi_gateway_alerts.state | int > 0 | int}}'
  condition:
  action:
  - data:
      message: Let op, er is een alert op de Unifi Gateway
      title: Unifi Gateway Alert
    service: notify.pushbullet
- id: 587gdfgfd5875
  alias: Notification Unifi Firmware Update
  trigger:
  - platform: template
    value_template: '{{states.sensor.unifi_gateway_firmware_upgradable.state | int
      > 0 | int}}'
  condition:
  action:
  - data:
      message: De firmware van een van de Unifi devices kun je upgraden
      title: Unifi Gateway Firmware Update
    service: notify.pushbullet
- id: 587gdfsdfs875
  alias: Notification HACS Update
  trigger:
  - platform: template
    value_template: '{{states.sensor.hacs.state | int > 0 | int}}'
  condition:
  action:
  - data:
      message: Er is een upgrade beschikbaar van een Home Assistant Community Store
        component
      title: Home Assistant Community Store Update
    service: notify.pushbullet
- id: 587gtertert875
  alias: Miscellaneous Cast HASSIO Cube 180 deg flip
  description: 180 deg draaien
  trigger:
  - event_data:
      id: cube_keuken
    event_type: deconz_event
    platform: event
  condition:
  - condition: template
    value_template: '{% set valid_events = [1006, 6001, 2005, 5002, 3004, 4003] %}
      {{ trigger.event.data.event in valid_events }}

      '
  action:
  - data:
      entity_id: media_player.keuken_hub
      view_path: default_view
    service: cast.show_lovelace_view
- id: 587hfghdfh
  alias: Notification GPS signal lost
  trigger:
  - platform: template
    value_template: '{{states.sensor.martijn_gps_accuracy.state ==  none}}'
  condition:
  action:
  - data:
      message: Het lijkt erop dat de locatie van Martijn in Google Maps niet meer
        goed gedeeld wordt. Graag aanpassen
    service: notify.pushbullet
- id: 587hfghdfh
  alias: Notification GPS signal lost Suzanne
  trigger:
  - platform: template
    value_template: '{{states.sensor.suzanne_gps_accuracy.state ==  none}}'
  condition:
  action:
  - data:
      message: Het lijkt erop dat de locatie van Suzanne in Google Maps niet meer
        goed gedeeld wordt. Graag aanpassen
    service: notify.pushbullet
- id: 583213dfh
  alias: People Greeting Martijn
  trigger:
    platform: state
    entity_id: person.martijn
    to: home
    for:
      minutes: 3
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.people_greeting_martijn.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 720 | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.people_greeting_suzanne.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 10 | int}}

      '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_greeting: 1
      call_briefing: 1
      call_responsibilities: 1
      call_no_announcement: 1
      call_garage_check: 1
      call_window_check: 1
      person: Martijn
- id: 583rwrwfh
  alias: People Greeting Suzanne
  trigger:
    platform: state
    entity_id: person.suzanne
    to: home
    for:
      minutes: 3
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.people_greeting_martijn.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 10 | int}}

      '
  - condition: template
    value_template: '{% set last_triggered = states.automation.people_greeting_suzanne.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 720 | int}}

      '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_greeting: 1
      call_briefing: 1
      call_responsibilities: 1
      call_no_announcement: 1
      call_garage_check: 1
      call_window_check: 1
      person: Suzanne
- id: 583terterth
  alias: People Greeting Kinderen
  trigger:
  - platform: state
    entity_id: person.suzanne
    to: home
    for:
      minutes: 3
  - platform: state
    entity_id: person.martijn
    to: home
    for:
      minutes: 3
  condition:
  - condition: state
    entity_id: input_boolean.schoolday_kids
    state: 'on'
  - condition: template
    value_template: '{% set last_triggered = states.automation.people_greeting_kinderen.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 10 | int}}'
  - condition: or
    conditions:
      - condition: template
        value_template: '{{ states.sensor.time.state > "12:10" and states.sensor.time.state < "12:45" }}'
      - condition: template
        value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state < "16:15" }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_briefing: 1
      call_responsibilities: 1
      call_no_announcement: 1
      person: Lars en Nienke
- id: 58gsdfgdgd
  alias: New device connected
  trigger:
  - platform: event
    event_type: device_tracker_new_device
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alert_mode
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_greeting: 1
      call_new_device: 1
    data_template:
      person: '{{ trigger.event.data.name }}'
- id: 58gdfgdgfwfh
  alias: Shut Down
  trigger:
  - event: shutdown
    platform: homeassistant
  - event_type: homeassistant.restart
    platform: event
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_bye: 1
      call_shut_down: 1
- id: 58fsdfsfwfh
  alias: Start Up
  trigger:
  - event: start
    platform: homeassistant
  action:
  - service: automation.reload
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_greeting: 1
      call_introduction: 1
- id: 157gdfgdfg541
  alias: Notification Send notification when Martijn arrived at work
  description: ''
  trigger:
  - entity_id: person.martijn
    platform: state
    to: Werk Martijn
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "06:45" and states.sensor.time.state
      < "09:15" }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Suzanne
  - service: script.janet_speech_engine
    data:
      call_greeting: 1
      call_work_arrive: 1
      person: Martijn
- id: 157gdfsfs41
  alias: Notification Send notification when Suzanne arrived at work
  description: ''
  trigger:
  - entity_id: person.suzanne
    platform: state
    to: Werk Suzanne ETL
  - entity_id: person.suzanne
    platform: state
    to: Werk Suzanne ZVB
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "06:45" and states.sensor.time.state
      < "09:15" }}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - data:
      call_greeting: 1
      call_work_arrive: 1
      person: Suzanne
    service: script.janet_speech_engine
- id: 157424234s41
  alias: Notification Send notification when Suzanne left work
  description: ''
  trigger:
  - entity_id: person.suzanne
    platform: state
    from: Werk Suzanne ETL
  - entity_id: person.suzanne
    platform: state
    from: Werk Suzanne ZVB
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "13:00" and states.sensor.time.state
      < "19:30" }}'
  - condition: state
    entity_id: input_boolean.workday_suzanne
    state: 'on'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - data:
      call_greeting: 1
      call_work_left: 1
      person: Suzanne
    service: script.janet_speech_engine
- id: 1utyrurturt1
  alias: Notification Send notification when Martijn left work
  description: ''
  trigger:
  - entity_id: person.martijn
    platform: state
    from: Werk Martijn
  condition:
  - condition: template
    value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state
      < "19:30" }}'
  - condition: state
    entity_id: input_boolean.workday_martijn
    state: 'on'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Suzanne
  - data:
      call_greeting: 1
      call_work_left: 1
      person: Martijn
    service: script.janet_speech_engine
- id: 1utyrurturt1
  alias: Notification Send notification when Martijn comes back home from work
  description: ''
  trigger:
  - entity_id: binary_sensor.eetkamerdeur
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ (distance("person.martijn", "zone.home") *1000 | float)
      < 500 }}'
  - condition: template
    value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state
      < "19:30" }}'
  - condition: template
    value_template: '{{ (now() - states.person.martijn.last_changed).total_seconds() < 60*25 }}'
  - condition: state
    entity_id: input_boolean.workday_martijn
    state: 'on'
  - condition: template
    value_template: '{% set last_triggered = states.automation.notification_send_notification_when_martijn_comes_back_home_from_work.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 30
      | int}}

      '
  action:
  - delay: 00:00:30
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Suzanne
  - data:
      call_briefing: 1
      person: Martijn
    service: script.janet_speech_engine
- id: 1utyrurturt1
  alias: Notification Send notification when Suzanne comes back home from work
  description: ''
  trigger:
  - entity_id: binary_sensor.eetkamerdeur
    platform: state
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ (distance("person.suzanne", "zone.home") *1000 | float)
      < 500 }}'
  - condition: template
    value_template: '{{ states.sensor.time.state > "15:30" and states.sensor.time.state
      < "19:30" }}'
  - condition: template
    value_template: '{{ (now() - states.person.suzanne.last_changed).total_seconds() < 60*20 }}'
  - condition: state
    entity_id: input_boolean.workday_suzanne
    state: 'on'
  - condition: template
    value_template: '{% set last_triggered = states.automation.notification_send_notification_when_suzanne_comes_back_home_from_work.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 30
      | int}}

      '
  action:
  - delay: 00:00:30
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - data:
      call_briefing: 1
      person: Suzanne
    service: script.janet_speech_engine
- id: '157gddgdfg24'
  alias: Miscellaneous reset work and schooldays
  description: ''
  trigger:
  - at: '00:05'
    platform: time
  condition: []
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.workday_martijn
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.workday_suzanne
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.schoolday_kids
- id: 1utygdfgdfgt1
  alias: Miscellaneous set workday Martijn
  description: ''
  trigger:
  - entity_id: person.martijn
    platform: state
    to: Werk Martijn
    for: 00:05:00
  condition: []
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.workday_martijn
- id: 1utfsdfsdffgt1
  alias: Miscellaneous set workday Suzanne
  description: ''
  trigger:
  - entity_id: person.suzanne
    platform: state
    to: Werk Suzanne ETL
    for: 00:05:00
  - entity_id: person.suzanne
    platform: state
    to: Werk Suzanne ZVB
    for: 00:05:00
  condition: []
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.workday_suzanne
- id: 1utyfsdfsd1
  alias: Miscellaneous set schoolday kids
  description: ''
  trigger:
  - entity_id: person.martijn
    platform: state
    to: School
    for: 00:00:30
  - entity_id: person.suzanne
    platform: state
    to: School
    for: 00:00:30
  condition: []
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.schoolday_kids
- id: 15hfhfghfs2
  alias: Motion Lights Off Licht Spiegel Hal 
  trigger:
  - entity_id: light.lamp_spiegel
    for: 00:03:00
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      entity_id:
      - light.lamp_spiegel
    service: light.turn_off
- id: knop bed triple click
  alias: Switch woonkamer en eetkamerdeur sfeer aan bij drie keer klikken
  trigger:
  - platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_eetkamer
      event: 1006
  - platform: event
    event_type: deconz_event
    event_data:
      id: smart_switch_woonkamer
      event: 1006
  condition:
  action:
  - data:
      brightness: 2
      color_temp: 500
      entity_id:
      - light.aanrecht
      - light.bar
      - light.boventv
      - light.lampen_eetkamertafel
      - light.sonoff_schemerlamp_n_bank
      - light.sonoff_lampje_tv
      - light.sonoff_lamp_ster
      - light.grote_staande_lamp_bank
      - light.sonoff_sfeerlicht_speelkamer
    service: light.turn_on
  - data:
      entity_id:
      - light.sonoff_spoelbak_keuken
      - light.lamp_spiegel
      - light.lampen_speelkamer
      - light.sonoff_schemerlamp_deur
    service: light.turn_off
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      CustomMessage: Ik heb de lampen in de woonkamer sfeervol voor je aangezet.
      text_only: 1
- id: 523453453h
  alias: People Greeting Gellius
  trigger:
  - platform: state
    entity_id: device_tracker.ipadvangellius
    to: home
    for:
      minutes: 3
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.people_greeting_gellius.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 720 | int}}

      '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_guests_greeting_sentence: 1
      person: Gellius
- id: 5253453342h
  alias: People Greeting Evelien
  trigger:
  - platform: state
    entity_id: device_tracker.android_d72bef8dc8bf8bdf
    to: home
    for:
      minutes: 3
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.people_greeting_evelien.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 720 | int}}

      '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_guests_greeting_sentence: 1
      person: Evelien
- id: 55345342h
  alias: Miscellaneous Guest mode on with arrival Gellius en Evelien
  trigger:
  - platform: state
    entity_id: device_tracker.android_d72bef8dc8bf8bdf
    to: home
    for:
      minutes: 1
  - platform: state
    entity_id: device_tracker.ipadvangellius
    to: home
    for:
      minutes: 1
  condition:
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.guest
- id: gdfgsdfgsdfgsdg
  alias: Notification Send notification when WAQI becomes too large pm_10
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states.sensor.waqi_pm_10.state | int > 60 }}'
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.notification_send_notification_when_waqi_becomes_too_large_pm_10.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 120
      | int}}

      '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - data:
      call_air_quality_check: 1
      type: pm_10
    service: script.janet_speech_engine
- id: gdfggdgdfsdg
  alias: Notification Send notification when WAQI becomes too large pm_2_5
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states.sensor.waqi_pm_2_5_moerdijk.state | int > 90 }}'
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.notification_send_notification_when_waqi_becomes_too_large_pm_2_5.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 120
      | int}}

      '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - data:
      call_air_quality_check: 1
      type: pm_2_5
    service: script.janet_speech_engine
- id: gdfggdgdfsdg
  alias: Notification Send notification when WAQI becomes too large ozone
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states.sensor.waqi_ozone.state | int > 50 }}'
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.notification_send_notification_when_waqi_becomes_too_large_ozone.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 120
      | int}}

      '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - data:
      call_air_quality_check: 1
      type: ozone
    service: script.janet_speech_engine
- id: gdfgfsdfsg
  alias: Notification Send notification when WAQI becomes too large nitrogen_dioxide
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states.sensor.waqi_nitrogen_dioxide.state | int > 50 }}'
  condition:
  - condition: template
    value_template: '{% set last_triggered = states.automation.notification_send_notification_when_waqi_becomes_too_large_nitrogen_dioxide.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 120
      | int}}

      '
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - data:
      call_air_quality_check: 1
      type: nitrogen_dioxide
    service: script.janet_speech_engine
- id: 'telegramremoveinline'
  alias: 'Telegram callback to remove keyboard'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/removekeyboard'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: 'last'
      chat_id: '{{ trigger.event.data.chat_id }}'
      inline_keyboard: []
- id: 'telegramrepeat_30m'
  alias: 'Telegram callback to repeat message in 30 minutes'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/30m'
  action:
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: 'OK, ik zal je over 30 minuten er aan herinneren'
      show_alert: true
  - service: telegram_bot.edit_replymarkup
    data_template:
      message_id: '{{ trigger.event.data.message.message_id }}'
      chat_id: '{{ trigger.event.data.user_id }}'
      inline_keyboard: []
- id: '15653dasdasd046'
  alias: Notification responsibilities google home
  trigger:
  - at: 07:22:00
    platform: time
  condition:
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: Martijn
  - service: script.janet_speech_engine
    data:
      call_greeting: 1
      call_responsibilities: 1
      call_garage_check: 1
      call_window_check: 1
- id: 5gdfgdfgdfh
  alias: Miscellaneous Blue LEDs off after restart
  trigger:
  - event: start
    platform: homeassistant
  action:
  - data:
      entity_id:
      - switch.dafang_camera_1_blue_led
      - switch.dafang_camera_2_blue_led
    service: switch.turn_off
- id: 5gdffsdfsdfsfh
  alias: Miscellaneous Blue LEDs off when on
  trigger:
  - entity_id: switch.dafang_camera_1_blue_led
    platform: state
    to: 'on'
  - entity_id: switch.dafang_camera_2_blue_led
    platform: state
    to: 'on'
  action:
  - data:
      entity_id:
      - switch.dafang_camera_1_blue_led
      - switch.dafang_camera_2_blue_led
    service: switch.turn_off
- id: gdfgsgfdgdsgdsfdg
  alias: Notification Send notification day summary PV production 
  description: ''
  trigger:
  - platform: template
    value_template: '{{ state_attr("sun.sun", "elevation") | int < 1 }}'
  condition:
  - condition: template
    value_template: '{{  states.sensor.time.state > "15:30" and states.sensor.time.state < "22:29"}}'
  - condition: template
    value_template: '{{ states.sensor.pv_output_power.state | int < 100 }}'
  - condition: template
    value_template: '{% set last_triggered = states.automation.notification_send_notification_day_summary_pv_production.attributes.last_triggered
      %} {{ last_triggered is none or ((as_timestamp(now())-as_timestamp(last_triggered))
      | int /60) > 720 | int}}'
  action:
  - service: input_select.select_option
    entity_id: input_select.janet_text_notification_target
    data:
      option: All
  - data:
      call_pv_production_message: 1
    service: script.janet_speech_engine
- id: gdfg75474ddffdg
  alias: Miscellaneous Set washing machine active when power detected
  trigger:
    - platform: numeric_state
      entity_id: sensor.power_wasmachine
      above: 50
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_select.washing_machine_status
        state: Vrij
      - condition: state
        entity_id: input_select.washing_machine_status
        state: Schoon
      - condition: state
        entity_id: input_select.washing_machine_status
        state: Voltooien
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.washing_machine_status
        option: Wassen
- id: gdfgs53534fdg
  alias: Miscellaneous Set washing machine finished when power drops
  trigger:
    - platform: numeric_state
      entity_id: sensor.power_wasmachine
      below: 10
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.washing_machine_status
        state: Wassen
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.washing_machine_status
        option: Voltooien
- id: gdfgs5353ffdg
  alias: Miscellaneous Set washing machine clean after timeout
  trigger:
    - platform: state
      entity_id: input_select.washing_machine_status
      to: Voltooien
      for:
        minutes: 8
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.washing_machine_status
        state: Voltooien
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.washing_machine_status
        option: Schoon
- id: gdfgssg5353fdg
  alias: Miscellaneous Set washing machine dirty when door opens
  trigger:
  - entity_id: binary_sensor.wasmachinedeur
    platform: state
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.washing_machine_status
        state: Schoon
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.washing_machine_status
        option: Vrij

